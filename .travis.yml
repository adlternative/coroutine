git:
  submodules: true
  quiet: true
  depth: 5

branches:
  except:
    - docs

notifications:
  email:
    - luncliff@gmail.com

addons:
  homebrew:
    packages:
      - doxygen
      - cmake
      - tree

  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - doxygen
      - tree
      - tar

language: cpp

install:
  # for this env, we don't have to use setup-compilers script
  # since they are installed. just replace installed bins to what we want
  - if [ ${TRAVIS_OS_NAME} == "linux" ]; then
    sudo rm -rf /usr/local/clang* /usr/local/cmake*;
    sudo bash ./scripts/setup-compilers-ubuntu.sh > /dev/null;
    sudo bash ./scripts/install-cmake-3.sh > /dev/null;
    CC=gcc-9 CXX=g++-9 sudo bash ./scripts/install-libcxx.sh release_90;
    fi
  - if [ ${TRAVIS_OS_NAME} == "osx" ]; then
    brew info llvm;
    fi
  - if [ ${TRAVIS_OS_NAME} == "windows" ]; then
    choco install llvm --yes --allow-downgrade --version=8.0.1;
    fi

before_script:
  - export CXX=${TRAVIS_COMPILER}

script:
  - cmake .
    -DCMAKE_INSTALL_PREFIX=${TRAVIS_BUILD_DIR}/install
    -DBUILD_SHARED_LIBS=True
    -DCMAKE_BUILD_TYPE=Debug
    -DUSE_PORTABLE_HEADER=True
    -DBUILD_TESTING=True
  - cmake --build . --config debug
  - cmake --build . --target install
  - ctest --output-on-failure

after_success:
  - cd ${TRAVIS_BUILD_DIR}
  - tree ./install

jobs:
  allow_failures:
    - env: EXPERIMENTAL=true
  include:
    - stage: build
      os: windows
      compiler: clang-cl
      script:
        - ./scripts/build-vs2017-cmake-clang.bat
        - ctest --output-on-failure

    - os: osx
      osx_image: xcode11.3
      compiler: clang

    - os: linux
      dist: xenial
      compiler: clang-8

    - os: linux
      dist: bionic
      compiler: clang-8

    - os: linux
      dist: bionic
      services:
        - docker
      env: EXPERIMENTAL=true
      before_script:
        - docker info
      script:
        - docker build . -f ./scripts/gcc-10-build.dockerfile -t luncliff/coroutine

    - stage: deploy
      language: python
      python:
        - "3.7"
      install:
        - pip install -r requirements.txt
      script:
        - doxygen ./docs/Doxyfile
        - doxybook -i docs/xml -o docs -t mkdocs
        - mkdocs build
      deploy:
        - provider: pages
          github_token: ${MAINTAINER_GITHUB_TOKEN}
          local_dir: site
          skip_cleanup: true
          keep_history: true
          on:
            branch: master
