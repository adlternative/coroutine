<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="return_8h" kind="file" language="C++">
    <compoundname>return.h</compoundname>
    <includes local="no">type_traits</includes>
    <includedby refid="linux_8h" local="no">interface/coroutine/linux.h</includedby>
    <includedby refid="net_8h" local="no">interface/coroutine/net.h</includedby>
    <includedby refid="pthread_8h" local="no">interface/coroutine/pthread.h</includedby>
    <includedby refid="unix_8h" local="no">interface/coroutine/unix.h</includedby>
    <includedby refid="windows_8h" local="no">interface/coroutine/windows.h</includedby>
    <includedby refid="yield_8hpp" local="no">interface/coroutine/yield.hpp</includedby>
    <includedby refid="darwin_8cpp" local="no">modules/system/darwin.cpp</includedby>
    <incdepgraph>
      <node id="208">
        <label>interface/coroutine/return.h</label>
        <link refid="return.h"/>
        <childnode refid="209" relation="include">
        </childnode>
      </node>
      <node id="209">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="222">
        <label>modules/system/kqueue.cpp</label>
        <link refid="kqueue_8cpp"/>
      </node>
      <node id="217">
        <label>modules/net/resolver.cpp</label>
        <link refid="resolver_8cpp"/>
      </node>
      <node id="225">
        <label>interface/coroutine/yield.hpp</label>
        <link refid="yield_8hpp"/>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
      </node>
      <node id="214">
        <label>interface/coroutine/net.h</label>
        <link refid="net_8h"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
      </node>
      <node id="219">
        <label>modules/system/pthread.cpp</label>
        <link refid="pthread_8cpp"/>
      </node>
      <node id="212">
        <label>modules/net/io_linux.cpp</label>
        <link refid="io__linux_8cpp"/>
      </node>
      <node id="221">
        <label>modules/system/darwin.cpp</label>
        <link refid="darwin_8cpp"/>
      </node>
      <node id="210">
        <label>interface/coroutine/return.h</label>
        <link refid="return.h"/>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
      </node>
      <node id="220">
        <label>interface/coroutine/unix.h</label>
        <link refid="unix_8h"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
      </node>
      <node id="213">
        <label>modules/system/linux.cpp</label>
        <link refid="linux_8cpp"/>
      </node>
      <node id="215">
        <label>modules/net/io_darwin.cpp</label>
        <link refid="io__darwin_8cpp"/>
      </node>
      <node id="218">
        <label>interface/coroutine/pthread.h</label>
        <link refid="pthread_8h"/>
        <childnode refid="219" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>interface/coroutine/linux.h</label>
        <link refid="linux_8h"/>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
      </node>
      <node id="216">
        <label>modules/net/io_windows.cpp</label>
        <link refid="io__windows_8cpp"/>
      </node>
      <node id="224">
        <label>modules/system/windows.cpp</label>
        <link refid="windows_8cpp"/>
      </node>
      <node id="223">
        <label>interface/coroutine/windows.h</label>
        <link refid="windows_8h"/>
        <childnode refid="224" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classpromise__nn" prot="public">promise_nn</innerclass>
    <innerclass refid="classpromise__na" prot="public">promise_na</innerclass>
    <innerclass refid="classpromise__an" prot="public">promise_an</innerclass>
    <innerclass refid="classpromise__aa" prot="public">promise_aa</innerclass>
    <innerclass refid="classnull__frame__promise" prot="public">null_frame_promise</innerclass>
    <innerclass refid="structnull__frame__t" prot="public">null_frame_t</innerclass>
    <innerclass refid="structnull__frame__t_1_1promise__type" prot="public">null_frame_t::promise_type</innerclass>
    <innerclass refid="classframe__t" prot="public">frame_t</innerclass>
    <innerclass refid="classframe__t_1_1promise__type" prot="public">frame_t::promise_type</innerclass>
    <innerclass refid="classpassive__frame__t" prot="public">passive_frame_t</innerclass>
    <innerclass refid="classpassive__frame__t_1_1promise__type" prot="public">passive_frame_t::promise_type</innerclass>
    <innerclass refid="structstd_1_1experimental_1_1coroutine__traits_3_01nullptr__t_00_01P_8_8_8_01_4" prot="public">std::experimental::coroutine_traits&lt; nullptr_t, P... &gt;</innerclass>
    <innerclass refid="structstd_1_1experimental_1_1coroutine__traits_3_01nullptr__t_00_01P_8_8_8_01_4_1_1promise__type" prot="public">std::experimental::coroutine_traits&lt; nullptr_t, P... &gt;::promise_type</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
    <innernamespace refid="namespacestd_1_1experimental">std::experimental</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="return_8h_1abc53f6443c5b7b19f6a4dd81fb55f755" prot="public" static="no">
        <name>COROUTINE_PROMISE_AND_RETURN_TYPES_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/return.h" line="10" column="9" bodyfile="interface/coroutine/return.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utility to define return types for coroutine. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>github.com/luncliff (<ulink url="mailto:luncliff@gmail.com">luncliff@gmail.com</ulink>) </para></simplesect>
<simplesect kind="copyright"><para>CC BY 4.0 <ref refid="" kindref="compound">https://devblogs.microsoft.com/cppblog/c20-concepts-are-here-in-visual-studio-2019-version-16-3/</ref></para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>COROUTINE_PROMISE_AND_RETURN_TYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="return_8h_1abc53f6443c5b7b19f6a4dd81fb55f755" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COROUTINE_PROMISE_AND_RETURN_TYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__has_include(&lt;coroutine/frame.h&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="frame_8h" kindref="compound">coroutine/frame.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecoro" kindref="compound">coro</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structstd_1_1coroutine__handle" kindref="compound">std::coroutine_handle</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classstd_1_1suspend__always" kindref="compound">std::suspend_always</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classstd_1_1suspend__never" kindref="compound">std::suspend_never</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>__has_include(&lt;experimental/coroutine&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;experimental/coroutine&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecoro" kindref="compound">coro</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::experimental::coroutine_handle;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::experimental::suspend_always;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::experimental::suspend_never;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;requires<sp/>header<sp/>&lt;experimental/coroutine&gt;<sp/>or<sp/>&lt;coroutine/frame.h&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>&lt;experimental/coroutine&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classpromise__nn" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpromise__nn" kindref="compound">promise_nn</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48" refid="classpromise__nn_1a6d4e1fa9d0bd22a6e26513c5d99b4ba8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>suspend_never<sp/><ref refid="classpromise__nn_1a6d4e1fa9d0bd22a6e26513c5d99b4ba8" kindref="member">initial_suspend</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55" refid="classpromise__nn_1a5aeb075cbae2b4b7e1e51f7797705f7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>suspend_never<sp/><ref refid="classpromise__nn_1a5aeb075cbae2b4b7e1e51f7797705f7c" kindref="member">final_suspend</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classpromise__na" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpromise__na" kindref="compound">promise_na</ref><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70" refid="classpromise__na_1a91148abe4003519303cb8d09135e602c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>suspend_never<sp/><ref refid="classpromise__na_1a91148abe4003519303cb8d09135e602c" kindref="member">initial_suspend</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77" refid="classpromise__na_1abce5e5bf2da45ee5ef37b57c98a0978d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>suspend_always<sp/><ref refid="classpromise__na_1abce5e5bf2da45ee5ef37b57c98a0978d" kindref="member">final_suspend</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classpromise__an" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpromise__an" kindref="compound">promise_an</ref><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92" refid="classpromise__an_1a76e21ad10b42fb5f96bd3366b149f8dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>suspend_always<sp/><ref refid="classpromise__an_1a76e21ad10b42fb5f96bd3366b149f8dc" kindref="member">initial_suspend</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99" refid="classpromise__an_1afeb84b8de6a3c0cdef9b665adb02eb37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>suspend_never<sp/><ref refid="classpromise__an_1afeb84b8de6a3c0cdef9b665adb02eb37" kindref="member">final_suspend</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classpromise__aa" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpromise__aa" kindref="compound">promise_aa</ref><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114" refid="classpromise__aa_1aa195dd4ecbc0b0572f570a44e968acde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>suspend_always<sp/><ref refid="classpromise__aa_1aa195dd4ecbc0b0572f570a44e968acde" kindref="member">initial_suspend</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121" refid="classpromise__aa_1a53e853d1ff33be76e1a405fc7aedd36e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>suspend_always<sp/><ref refid="classpromise__aa_1a53e853d1ff33be76e1a405fc7aedd36e" kindref="member">final_suspend</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classnull__frame__promise" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnull__frame__promise" kindref="compound">null_frame_promise</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classpromise__nn" kindref="compound">promise_nn</ref><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133" refid="classnull__frame__promise_1a17588b19466e4c298e46db7c4e995842" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnull__frame__promise_1a17588b19466e4c298e46db7c4e995842" kindref="member">unhandled_exception</ref>()<sp/>noexcept(false)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136" refid="classnull__frame__promise_1ac90bb150d51e2aa1fe18621b24d43324" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnull__frame__promise_1ac90bb150d51e2aa1fe18621b24d43324" kindref="member">return_void</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="structnull__frame__t" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnull__frame__t" kindref="compound">null_frame_t</ref><sp/>final<sp/>{</highlight></codeline>
<codeline lineno="158" refid="structnull__frame__t_1_1promise__type" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnull__frame__t_1_1promise__type" kindref="compound">promise_type</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classnull__frame__promise" kindref="compound">null_frame_promise</ref><sp/>{</highlight></codeline>
<codeline lineno="162" refid="structnull__frame__t_1_1promise__type_1addb58f003e1ad4f14e7380486b2df996" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnull__frame__t" kindref="compound">null_frame_t</ref><sp/><ref refid="structnull__frame__t_1_1promise__type_1addb58f003e1ad4f14e7380486b2df996" kindref="member">get_return_object</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="166"><highlight class="normal">};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classframe__t" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classframe__t" kindref="compound">frame_t</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>coroutine_handle&lt;void&gt;<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181" refid="classframe__t_1_1promise__type" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classframe__t_1_1promise__type" kindref="compound">promise_type</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classpromise__na" kindref="compound">promise_na</ref><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="186" refid="classframe__t_1_1promise__type_1ac5ed5b7beba5d8b80a1c4714997669ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classframe__t_1_1promise__type_1ac5ed5b7beba5d8b80a1c4714997669ad" kindref="member">unhandled_exception</ref>()<sp/>noexcept(false)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189" refid="classframe__t_1_1promise__type_1a6d877a5a5c67c606434803818b20c96a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classframe__t_1_1promise__type_1a6d877a5a5c67c606434803818b20c96a" kindref="member">return_void</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195" refid="classframe__t_1_1promise__type_1a02e7a0008289f4e8ff7a491d699a74f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classframe__t" kindref="compound">frame_t</ref><sp/><ref refid="classframe__t_1_1promise__type_1a02e7a0008289f4e8ff7a491d699a74f0" kindref="member">get_return_object</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classframe__t" kindref="compound">frame_t</ref>{<ref refid="structstd_1_1coroutine__handle_1ae5c6fd5a601ffde34d8e5d9130851a01" kindref="member">coroutine_handle&lt;promise_type&gt;::from_promise</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="201" refid="classframe__t_1a1fc79f08edd65832685b317604d6ba7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classframe__t_1a1fc79f08edd65832685b317604d6ba7b" kindref="member">frame_t</ref>(coroutine_handle&lt;void&gt;<sp/>frame<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>noexcept</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>coroutine_handle&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;{frame}<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal">};</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="classpassive__frame__t" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpassive__frame__t" kindref="compound">passive_frame_t</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>coroutine_handle&lt;void&gt;<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="215" refid="classpassive__frame__t_1_1promise__type" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpassive__frame__t_1_1promise__type" kindref="compound">promise_type</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classpromise__aa" kindref="compound">promise_aa</ref><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="217" refid="classpassive__frame__t_1_1promise__type_1a76d0038147acf00a31f852f7d7716f01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpassive__frame__t_1_1promise__type_1a76d0038147acf00a31f852f7d7716f01" kindref="member">unhandled_exception</ref>()<sp/>noexcept(false)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220" refid="classpassive__frame__t_1_1promise__type_1a40aff2c9bfbdc56aebce5932f3af7449" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpassive__frame__t_1_1promise__type_1a40aff2c9bfbdc56aebce5932f3af7449" kindref="member">return_void</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222" refid="classpassive__frame__t_1_1promise__type_1ac55162d270c135f55863b2f3b6c888be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpassive__frame__t" kindref="compound">passive_frame_t</ref><sp/><ref refid="classpassive__frame__t_1_1promise__type_1ac55162d270c135f55863b2f3b6c888be" kindref="member">get_return_object</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpassive__frame__t" kindref="compound">passive_frame_t</ref>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstd_1_1coroutine__handle_1ae5c6fd5a601ffde34d8e5d9130851a01" kindref="member">coroutine_handle&lt;promise_type&gt;::from_promise</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="227" refid="classpassive__frame__t_1a4cb04a77e3f0fb4ce12fa379e82205c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classpassive__frame__t_1a4cb04a77e3f0fb4ce12fa379e82205c4" kindref="member">passive_frame_t</ref>(coroutine_handle&lt;void&gt;<sp/>frame<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>noexcept</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>coroutine_handle&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;{frame}<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal">};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cpp_concepts)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="234"><highlight class="comment">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>R<sp/>=<sp/>void&gt;</highlight></codeline>
<codeline lineno="235"><highlight class="comment">concept<sp/>awaitable<sp/>=<sp/>requires(T<sp/>a,<sp/>coroutine_handle&lt;void&gt;<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/>{<sp/>a.await_ready()<sp/>}<sp/>-&gt;bool;</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/>{<sp/>a.await_suspend(h)<sp/>}<sp/>-&gt;void;</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/>{<sp/>a.await_resume()<sp/>}<sp/>-&gt;R;</highlight></codeline>
<codeline lineno="239"><highlight class="comment">};</highlight></codeline>
<codeline lineno="240"><highlight class="comment">template<sp/>&lt;typename<sp/>P&gt;</highlight></codeline>
<codeline lineno="241"><highlight class="comment">concept<sp/>promise_requirement_basic<sp/>=<sp/>requires(P<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/>{<sp/>p.initial_suspend()<sp/>}<sp/>-&gt;awaitable;</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/>{<sp/>p.final_suspend()<sp/>}<sp/>-&gt;awaitable;</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/><sp/>{<sp/>p.unhandled_exception()<sp/>}<sp/>-&gt;void;</highlight></codeline>
<codeline lineno="245"><highlight class="comment">};</highlight></codeline>
<codeline lineno="246"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>coro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">experimental<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>P&gt;</highlight></codeline>
<codeline lineno="261" refid="structstd_1_1experimental_1_1coroutine__traits_3_01nullptr__t_00_01P_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstd_1_1experimental_1_1coroutine__traits" kindref="compound">coroutine_traits</ref>&lt;nullptr_t,<sp/>P...&gt;<sp/>{</highlight></codeline>
<codeline lineno="262" refid="structstd_1_1experimental_1_1coroutine__traits_3_01nullptr__t_00_01P_8_8_8_01_4_1_1promise__type" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">promise_type<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>coro::null_frame_promise<sp/>{</highlight></codeline>
<codeline lineno="266" refid="structstd_1_1experimental_1_1coroutine__traits_3_01nullptr__t_00_01P_8_8_8_01_4_1_1promise__type_1a775d060502bbeaa1ebb62c59f351ed2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nullptr_t<sp/><ref refid="structstd_1_1experimental_1_1coroutine__traits_3_01nullptr__t_00_01P_8_8_8_01_4_1_1promise__type_1a775d060502bbeaa1ebb62c59f351ed2b" kindref="member">get_return_object</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="270"><highlight class="normal">};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>experimental</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>std</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>COROUTINE_PROMISE_AND_RETURN_TYPES_H</highlight></codeline>
    </programlisting>
    <location file="interface/coroutine/return.h"/>
  </compounddef>
</doxygen>
