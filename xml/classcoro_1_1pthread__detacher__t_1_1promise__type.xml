<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classcoro_1_1pthread__detacher__t_1_1promise__type" kind="class" language="C++" prot="public" final="yes">
    <compoundname>coro::pthread_detacher_t::promise_type</compoundname>
    <basecompoundref refid="classcoro_1_1pthread__spawn__promise" prot="public" virt="non-virtual">coro::pthread_spawn_promise</basecompoundref>
    <includes refid="pthread_8h" local="no">pthread.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcoro_1_1pthread__detacher__t_1_1promise__type_1a21362c44504730ced0857f6e7b7a21fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto coro::pthread_detacher_t::promise_type::final_suspend</definition>
        <argsstring>() noexcept</argsstring>
        <name>final_suspend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/pthread.h" line="177" column="1" bodyfile="interface/coroutine/pthread.h" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classcoro_1_1pthread__detacher__t_1_1promise__type_1a23ab51d7e94692dd6fac80ab844c88b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void coro::pthread_detacher_t::promise_type::return_void</definition>
        <argsstring>() noexcept</argsstring>
        <name>return_void</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/pthread.h" line="180" column="1" bodyfile="interface/coroutine/pthread.h" bodystart="180" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classcoro_1_1pthread__detacher__t_1_1promise__type_1a69a7c92cd0cc08125ef3ebd06ebff109" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto coro::pthread_detacher_t::promise_type::get_return_object</definition>
        <argsstring>() noexcept-&gt; promise_type *</argsstring>
        <name>get_return_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/pthread.h" line="182" column="1" bodyfile="interface/coroutine/pthread.h" bodystart="182" bodyend="184"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="299">
        <label>coro::pthread_detacher_t::promise_type</label>
        <link refid="classcoro_1_1pthread__detacher__t_1_1promise__type"/>
        <childnode refid="300" relation="public-inheritance">
        </childnode>
      </node>
      <node id="300">
        <label>coro::pthread_spawn_promise</label>
        <link refid="classcoro_1_1pthread__spawn__promise"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="301">
        <label>coro::pthread_detacher_t::promise_type</label>
        <link refid="classcoro_1_1pthread__detacher__t_1_1promise__type"/>
        <childnode refid="302" relation="public-inheritance">
        </childnode>
      </node>
      <node id="302">
        <label>coro::pthread_spawn_promise</label>
        <link refid="classcoro_1_1pthread__spawn__promise"/>
      </node>
    </collaborationgraph>
    <location file="interface/coroutine/pthread.h" line="173" column="1" bodyfile="interface/coroutine/pthread.h" bodystart="173" bodyend="185"/>
    <listofallmembers>
      <member refid="classcoro_1_1pthread__spawn__promise_1a0001ebb427fe3da1857b36bb3b483eb0" prot="public" virt="non-virtual"><scope>coro::pthread_detacher_t::promise_type</scope><name>await_transform</name></member>
      <member refid="classcoro_1_1pthread__spawn__promise_1a3b8bf1c50daa6f9a8dd7e21d9ce264ef" prot="public" virt="non-virtual"><scope>coro::pthread_detacher_t::promise_type</scope><name>await_transform</name></member>
      <member refid="classcoro_1_1pthread__spawn__promise_1a0d23e2a68f2715d37f2621788869cc2f" prot="public" virt="non-virtual"><scope>coro::pthread_detacher_t::promise_type</scope><name>await_transform</name></member>
      <member refid="classcoro_1_1pthread__detacher__t_1_1promise__type_1a21362c44504730ced0857f6e7b7a21fa" prot="public" virt="non-virtual"><scope>coro::pthread_detacher_t::promise_type</scope><name>final_suspend</name></member>
      <member refid="classcoro_1_1pthread__detacher__t_1_1promise__type_1a69a7c92cd0cc08125ef3ebd06ebff109" prot="public" virt="non-virtual"><scope>coro::pthread_detacher_t::promise_type</scope><name>get_return_object</name></member>
      <member refid="classcoro_1_1pthread__spawn__promise_1aba3cf3b57dd677f91a70d810ba5cb586" prot="public" virt="non-virtual"><scope>coro::pthread_detacher_t::promise_type</scope><name>initial_suspend</name></member>
      <member refid="classcoro_1_1pthread__detacher__t_1_1promise__type_1a23ab51d7e94692dd6fac80ab844c88b6" prot="public" virt="non-virtual"><scope>coro::pthread_detacher_t::promise_type</scope><name>return_void</name></member>
      <member refid="classcoro_1_1pthread__spawn__promise_1ab97d78b547d3e294c41777520054dc49" prot="public" virt="non-virtual"><scope>coro::pthread_detacher_t::promise_type</scope><name>tid</name></member>
      <member refid="classcoro_1_1pthread__spawn__promise_1a376471c18a55b430110ee8cd4e7c5b05" prot="public" virt="non-virtual"><scope>coro::pthread_detacher_t::promise_type</scope><name>unhandled_exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
