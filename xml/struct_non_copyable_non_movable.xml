<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="struct_non_copyable_non_movable" kind="struct" language="C++" prot="public">
    <compoundname>NonCopyableNonMovable</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_non_copyable_non_movable_1ac6158be93fae560d3eb76866e999b43c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NonCopyableNonMovable::NonCopyableNonMovable</definition>
        <argsstring>()=default</argsstring>
        <name>NonCopyableNonMovable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="external/guideline/tests/notnull_tests.cpp" line="123" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_non_copyable_non_movable_1ae703e4b57bc2b31c5a1a595ce1522393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NonCopyableNonMovable::NonCopyableNonMovable</definition>
        <argsstring>(const NonCopyableNonMovable &amp;)=delete</argsstring>
        <name>NonCopyableNonMovable</name>
        <param>
          <type>const <ref refid="struct_non_copyable_non_movable" kindref="compound">NonCopyableNonMovable</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="external/guideline/tests/notnull_tests.cpp" line="124" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_non_copyable_non_movable_1af20f4599a87549a42f725047a934b5a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_non_copyable_non_movable" kindref="compound">NonCopyableNonMovable</ref> &amp;</type>
        <definition>NonCopyableNonMovable&amp; NonCopyableNonMovable::operator=</definition>
        <argsstring>(const NonCopyableNonMovable &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="struct_non_copyable_non_movable" kindref="compound">NonCopyableNonMovable</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="external/guideline/tests/notnull_tests.cpp" line="125" column="27"/>
      </memberdef>
      <memberdef kind="function" id="struct_non_copyable_non_movable_1a59843becd2600f24c94c50479f01ffcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NonCopyableNonMovable::NonCopyableNonMovable</definition>
        <argsstring>(NonCopyableNonMovable &amp;&amp;)=delete</argsstring>
        <name>NonCopyableNonMovable</name>
        <param>
          <type><ref refid="struct_non_copyable_non_movable" kindref="compound">NonCopyableNonMovable</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="external/guideline/tests/notnull_tests.cpp" line="126" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_non_copyable_non_movable_1a2e1af14022b8a268721bed0e3f7391c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_non_copyable_non_movable" kindref="compound">NonCopyableNonMovable</ref> &amp;</type>
        <definition>NonCopyableNonMovable&amp; NonCopyableNonMovable::operator=</definition>
        <argsstring>(NonCopyableNonMovable &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="struct_non_copyable_non_movable" kindref="compound">NonCopyableNonMovable</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="external/guideline/tests/notnull_tests.cpp" line="127" column="27"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="external/guideline/tests/notnull_tests.cpp" line="122" column="1" bodyfile="external/guideline/tests/notnull_tests.cpp" bodystart="121" bodyend="128"/>
    <listofallmembers>
      <member refid="struct_non_copyable_non_movable_1ac6158be93fae560d3eb76866e999b43c" prot="public" virt="non-virtual"><scope>NonCopyableNonMovable</scope><name>NonCopyableNonMovable</name></member>
      <member refid="struct_non_copyable_non_movable_1ae703e4b57bc2b31c5a1a595ce1522393" prot="public" virt="non-virtual"><scope>NonCopyableNonMovable</scope><name>NonCopyableNonMovable</name></member>
      <member refid="struct_non_copyable_non_movable_1a59843becd2600f24c94c50479f01ffcf" prot="public" virt="non-virtual"><scope>NonCopyableNonMovable</scope><name>NonCopyableNonMovable</name></member>
      <member refid="struct_non_copyable_non_movable_1af20f4599a87549a42f725047a934b5a8" prot="public" virt="non-virtual"><scope>NonCopyableNonMovable</scope><name>operator=</name></member>
      <member refid="struct_non_copyable_non_movable_1a2e1af14022b8a268721bed0e3f7391c4" prot="public" virt="non-virtual"><scope>NonCopyableNonMovable</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
