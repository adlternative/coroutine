<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4" kind="class" language="C++" prot="public">
    <compoundname>std::experimental::coroutine_handle&lt; void &gt;</compoundname>
    <derivedcompoundref refid="classcoro_1_1frame__t" prot="public" virt="non-virtual">coro::frame_t</derivedcompoundref>
    <derivedcompoundref refid="classstd_1_1experimental_1_1coroutine__handle_3_01noop__coroutine__promise_01_4" prot="public" virt="non-virtual">std::experimental::coroutine_handle&lt; noop_coroutine_promise &gt;</derivedcompoundref>
    <innerclass refid="unionstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1_1prefix__t" prot="public">std::experimental::coroutine_handle&lt; void &gt;::prefix_t</innerclass>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a539afb4dbb98ef72c4b1bc815ca544dd" prot="public" static="no" mutable="no">
        <type>prefix_t</type>
        <definition>prefix_t std::experimental::coroutine_handle&lt; void &gt;::prefix</definition>
        <argsstring></argsstring>
        <name>prefix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="188" column="14" bodyfile="interface/coroutine/frame.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a2d93acbaf2756143278d58623e972ef7" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>std::experimental::coroutine_handle&lt; void &gt;::coroutine_handle</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>coroutine_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="191" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1afe0b96dcd8ba2e9e2cf6f40a8bbdc6de" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>std::experimental::coroutine_handle&lt; void &gt;::~coroutine_handle</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~coroutine_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="192" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1afc742d2bb6c3d57cb9f634b59870595f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>std::experimental::coroutine_handle&lt; void &gt;::coroutine_handle</definition>
        <argsstring>(coroutine_handle const &amp;) noexcept=default</argsstring>
        <name>coroutine_handle</name>
        <param>
          <type><ref refid="classstd_1_1experimental_1_1coroutine__handle" kindref="compound">coroutine_handle</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="193" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a9bfe8d863ca3990766933966ee7aac98" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>std::experimental::coroutine_handle&lt; void &gt;::coroutine_handle</definition>
        <argsstring>(coroutine_handle &amp;&amp;rhs) noexcept=default</argsstring>
        <name>coroutine_handle</name>
        <param>
          <type><ref refid="classstd_1_1experimental_1_1coroutine__handle" kindref="compound">coroutine_handle</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="194" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a56103ccddff839bb50669adc1ad129fe" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classstd_1_1experimental_1_1coroutine__handle" kindref="compound">coroutine_handle</ref> &amp;</type>
        <definition>coroutine_handle&amp; std::experimental::coroutine_handle&lt; void &gt;::operator=</definition>
        <argsstring>(coroutine_handle const &amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classstd_1_1experimental_1_1coroutine__handle" kindref="compound">coroutine_handle</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="195" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a8e50e6f4cd7ef094b57dcfa93678ef9e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classstd_1_1experimental_1_1coroutine__handle" kindref="compound">coroutine_handle</ref> &amp;</type>
        <definition>coroutine_handle&amp; std::experimental::coroutine_handle&lt; void &gt;::operator=</definition>
        <argsstring>(coroutine_handle &amp;&amp;rhs) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classstd_1_1experimental_1_1coroutine__handle" kindref="compound">coroutine_handle</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="196" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a159f11cf324cb9e52b3ab4efa18749b4" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>std::experimental::coroutine_handle&lt; void &gt;::coroutine_handle</definition>
        <argsstring>(std::nullptr_t) noexcept</argsstring>
        <name>coroutine_handle</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="198" column="5" bodyfile="interface/coroutine/frame.h" bodystart="198" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a44c1faf2c62a32c57492f6b423493e03" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classstd_1_1experimental_1_1coroutine__handle" kindref="compound">coroutine_handle</ref> &amp;</type>
        <definition>coroutine_handle&amp; std::experimental::coroutine_handle&lt; void &gt;::operator=</definition>
        <argsstring>(nullptr_t) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="200" column="22" bodyfile="interface/coroutine/frame.h" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1aee1109d9f9f6152d7dab7654d914d92e" prot="public" static="no" const="yes" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>std::experimental::coroutine_handle&lt; void &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="205" column="14" bodyfile="interface/coroutine/frame.h" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1af25e195bac0d596e66043e82a9406d0e" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void std::experimental::coroutine_handle&lt; void &gt;::resume</definition>
        <argsstring>() noexcept(false)</argsstring>
        <name>resume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="208" column="10" bodyfile="interface/coroutine/frame.h" bodystart="208" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a1eac3fe500f7af2b02c37ee0ecacde68" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void std::experimental::coroutine_handle&lt; void &gt;::destroy</definition>
        <argsstring>() noexcept</argsstring>
        <name>destroy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="217" column="10" bodyfile="interface/coroutine/frame.h" bodystart="217" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a5dd3756163ceeb9ca8a7f283225a8b34" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool std::experimental::coroutine_handle&lt; void &gt;::done</definition>
        <argsstring>() const noexcept</argsstring>
        <name>done</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="226" column="10" bodyfile="interface/coroutine/frame.h" bodystart="226" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a91b3e76af53b029da67649a99a7efdd5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void *</type>
        <definition>constexpr void* std::experimental::coroutine_handle&lt; void &gt;::address</definition>
        <argsstring>() const noexcept</argsstring>
        <name>address</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="239" column="20" bodyfile="interface/coroutine/frame.h" bodystart="239" bodyend="241"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a9bd09d9dc0b1b54e726b74b1991ddd47" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classstd_1_1experimental_1_1coroutine__handle" kindref="compound">coroutine_handle</ref></type>
        <definition>static coroutine_handle std::experimental::coroutine_handle&lt; void &gt;::from_address</definition>
        <argsstring>(void *addr) noexcept</argsstring>
        <name>from_address</name>
        <param>
          <type>void *</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="243" column="29" bodyfile="interface/coroutine/frame.h" bodystart="243" bodyend="247"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>std::experimental::coroutine_handle&lt; noop_coroutine_promise &gt;</label>
        <link refid="classstd_1_1experimental_1_1coroutine__handle_3_01noop__coroutine__promise_01_4"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>std::experimental::coroutine_handle&lt; void &gt;</label>
        <link refid="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4"/>
      </node>
      <node id="2">
        <label>coro::frame_t</label>
        <link refid="classcoro_1_1frame__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="interface/coroutine/frame.h" line="176" column="24" bodyfile="interface/coroutine/frame.h" bodystart="176" bodyend="248"/>
    <listofallmembers>
      <member refid="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a91b3e76af53b029da67649a99a7efdd5" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_handle&lt; void &gt;</scope><name>address</name></member>
      <member refid="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a2d93acbaf2756143278d58623e972ef7" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_handle&lt; void &gt;</scope><name>coroutine_handle</name></member>
      <member refid="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1afc742d2bb6c3d57cb9f634b59870595f" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_handle&lt; void &gt;</scope><name>coroutine_handle</name></member>
      <member refid="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a9bfe8d863ca3990766933966ee7aac98" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_handle&lt; void &gt;</scope><name>coroutine_handle</name></member>
      <member refid="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a159f11cf324cb9e52b3ab4efa18749b4" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_handle&lt; void &gt;</scope><name>coroutine_handle</name></member>
      <member refid="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a1eac3fe500f7af2b02c37ee0ecacde68" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_handle&lt; void &gt;</scope><name>destroy</name></member>
      <member refid="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a5dd3756163ceeb9ca8a7f283225a8b34" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_handle&lt; void &gt;</scope><name>done</name></member>
      <member refid="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a9bd09d9dc0b1b54e726b74b1991ddd47" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_handle&lt; void &gt;</scope><name>from_address</name></member>
      <member refid="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1aee1109d9f9f6152d7dab7654d914d92e" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_handle&lt; void &gt;</scope><name>operator bool</name></member>
      <member refid="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a56103ccddff839bb50669adc1ad129fe" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_handle&lt; void &gt;</scope><name>operator=</name></member>
      <member refid="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a8e50e6f4cd7ef094b57dcfa93678ef9e" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_handle&lt; void &gt;</scope><name>operator=</name></member>
      <member refid="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a44c1faf2c62a32c57492f6b423493e03" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_handle&lt; void &gt;</scope><name>operator=</name></member>
      <member refid="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1a539afb4dbb98ef72c4b1bc815ca544dd" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_handle&lt; void &gt;</scope><name>prefix</name></member>
      <member refid="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1af25e195bac0d596e66043e82a9406d0e" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_handle&lt; void &gt;</scope><name>resume</name></member>
      <member refid="classstd_1_1experimental_1_1coroutine__handle_3_01void_01_4_1afe0b96dcd8ba2e9e2cf6f40a8bbdc6de" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_handle&lt; void &gt;</scope><name>~coroutine_handle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
