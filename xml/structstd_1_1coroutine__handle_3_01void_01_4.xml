<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structstd_1_1coroutine__handle_3_01void_01_4" kind="struct" language="C++" prot="public">
    <compoundname>std::coroutine_handle&lt; void &gt;</compoundname>
    <derivedcompoundref refid="structstd_1_1coroutine__handle_3_01noop__coroutine__promise_01_4" prot="public" virt="non-virtual">std::coroutine_handle&lt; noop_coroutine_promise &gt;</derivedcompoundref>
    <includes refid="frame_8h" local="no">frame.h</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structstd_1_1coroutine__handle_3_01void_01_4_1a2b0a0c0e4aa456343c91c330cffbac98" prot="protected" static="no" mutable="no">
        <type>portable_coro_prefix *</type>
        <definition>portable_coro_prefix* std::coroutine_handle&lt; void &gt;::_Ptr</definition>
        <argsstring></argsstring>
        <name>_Ptr</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="106" column="1" bodyfile="interface/coroutine/frame.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structstd_1_1coroutine__handle_3_01void_01_4_1a00719061b82c9c30833bf1ca65580611" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr std::coroutine_handle&lt; void &gt;::coroutine_handle</definition>
        <argsstring>() noexcept</argsstring>
        <name>coroutine_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="68" column="1" bodyfile="interface/coroutine/frame.h" bodystart="68" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structstd_1_1coroutine__handle_3_01void_01_4_1a2fb02ba714309103598311e15a27d96f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr std::coroutine_handle&lt; void &gt;::coroutine_handle</definition>
        <argsstring>(std::nullptr_t) noexcept</argsstring>
        <name>coroutine_handle</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="71" column="1" bodyfile="interface/coroutine/frame.h" bodystart="71" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structstd_1_1coroutine__handle_3_01void_01_4_1a3407f60783152a1f0560c4b51911c5ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structstd_1_1coroutine__handle" kindref="compound">coroutine_handle</ref> &amp;</type>
        <definition>coroutine_handle&amp; std::coroutine_handle&lt; void &gt;::operator=</definition>
        <argsstring>(nullptr_t) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="73" column="1" bodyfile="interface/coroutine/frame.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structstd_1_1coroutine__handle_3_01void_01_4_1a53c28109d68a249b167b55f2e00fec0d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr void *</type>
        <definition>constexpr void* std::coroutine_handle&lt; void &gt;::address</definition>
        <argsstring>() const noexcept</argsstring>
        <name>address</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="78" column="1" bodyfile="interface/coroutine/frame.h" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structstd_1_1coroutine__handle_3_01void_01_4_1ae59c49e9dccab018283cefff9c2e2cb3" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr std::coroutine_handle&lt; void &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="88" column="1" bodyfile="interface/coroutine/frame.h" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structstd_1_1coroutine__handle_3_01void_01_4_1ad76f9dabbe85b529a389cb6ced893ce7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool std::coroutine_handle&lt; void &gt;::done</definition>
        <argsstring>() const </argsstring>
        <name>done</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="91" column="1" bodyfile="interface/coroutine/frame.h" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structstd_1_1coroutine__handle_3_01void_01_4_1a2ca3a8939708812987408b7fac84c336" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void std::coroutine_handle&lt; void &gt;::resume</definition>
        <argsstring>() const </argsstring>
        <name>resume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="95" column="1" bodyfile="interface/coroutine/frame.h" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structstd_1_1coroutine__handle_3_01void_01_4_1af10de68c35d41c66f997023a1ca00567" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void std::coroutine_handle&lt; void &gt;::operator()</definition>
        <argsstring>() const </argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="98" column="1" bodyfile="interface/coroutine/frame.h" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="structstd_1_1coroutine__handle_3_01void_01_4_1a2867ef5f88bb895076bdad54049cc8df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void std::coroutine_handle&lt; void &gt;::destroy</definition>
        <argsstring>() const </argsstring>
        <name>destroy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="101" column="1" bodyfile="interface/coroutine/frame.h" bodystart="101" bodyend="103"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structstd_1_1coroutine__handle_3_01void_01_4_1a76f6a285c67fb921c7cdf9bdede2eeaf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structstd_1_1coroutine__handle" kindref="compound">coroutine_handle</ref></type>
        <definition>static coroutine_handle std::coroutine_handle&lt; void &gt;::from_address</definition>
        <argsstring>(void *_Addr)</argsstring>
        <name>from_address</name>
        <param>
          <type>void *</type>
          <declname>_Addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="82" column="1" bodyfile="interface/coroutine/frame.h" bodystart="82" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="227">
        <label>std::coroutine_handle&lt; void &gt;</label>
        <link refid="structstd_1_1coroutine__handle_3_01void_01_4"/>
      </node>
      <node id="228">
        <label>std::coroutine_handle&lt; noop_coroutine_promise &gt;</label>
        <link refid="structstd_1_1coroutine__handle_3_01noop__coroutine__promise_01_4"/>
        <childnode refid="227" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="interface/coroutine/frame.h" line="66" column="1" bodyfile="interface/coroutine/frame.h" bodystart="66" bodyend="107"/>
    <listofallmembers>
      <member refid="structstd_1_1coroutine__handle_3_01void_01_4_1a2b0a0c0e4aa456343c91c330cffbac98" prot="protected" virt="non-virtual"><scope>std::coroutine_handle&lt; void &gt;</scope><name>_Ptr</name></member>
      <member refid="structstd_1_1coroutine__handle_3_01void_01_4_1a53c28109d68a249b167b55f2e00fec0d" prot="public" virt="non-virtual"><scope>std::coroutine_handle&lt; void &gt;</scope><name>address</name></member>
      <member refid="structstd_1_1coroutine__handle_3_01void_01_4_1a00719061b82c9c30833bf1ca65580611" prot="public" virt="non-virtual"><scope>std::coroutine_handle&lt; void &gt;</scope><name>coroutine_handle</name></member>
      <member refid="structstd_1_1coroutine__handle_3_01void_01_4_1a2fb02ba714309103598311e15a27d96f" prot="public" virt="non-virtual"><scope>std::coroutine_handle&lt; void &gt;</scope><name>coroutine_handle</name></member>
      <member refid="structstd_1_1coroutine__handle_3_01void_01_4_1a2867ef5f88bb895076bdad54049cc8df" prot="public" virt="non-virtual"><scope>std::coroutine_handle&lt; void &gt;</scope><name>destroy</name></member>
      <member refid="structstd_1_1coroutine__handle_3_01void_01_4_1ad76f9dabbe85b529a389cb6ced893ce7" prot="public" virt="non-virtual"><scope>std::coroutine_handle&lt; void &gt;</scope><name>done</name></member>
      <member refid="structstd_1_1coroutine__handle_3_01void_01_4_1a76f6a285c67fb921c7cdf9bdede2eeaf" prot="public" virt="non-virtual"><scope>std::coroutine_handle&lt; void &gt;</scope><name>from_address</name></member>
      <member refid="structstd_1_1coroutine__handle_3_01void_01_4_1ae59c49e9dccab018283cefff9c2e2cb3" prot="public" virt="non-virtual"><scope>std::coroutine_handle&lt; void &gt;</scope><name>operator bool</name></member>
      <member refid="structstd_1_1coroutine__handle_3_01void_01_4_1af10de68c35d41c66f997023a1ca00567" prot="public" virt="non-virtual"><scope>std::coroutine_handle&lt; void &gt;</scope><name>operator()</name></member>
      <member refid="structstd_1_1coroutine__handle_3_01void_01_4_1a3407f60783152a1f0560c4b51911c5ea" prot="public" virt="non-virtual"><scope>std::coroutine_handle&lt; void &gt;</scope><name>operator=</name></member>
      <member refid="structstd_1_1coroutine__handle_3_01void_01_4_1a2ca3a8939708812987408b7fac84c336" prot="public" virt="non-virtual"><scope>std::coroutine_handle&lt; void &gt;</scope><name>resume</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
