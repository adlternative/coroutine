<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structstd_1_1experimental_1_1coroutine__traits_3_01void_00_01P_8_8_8_01_4_1_1promise__type" kind="struct" language="C++" prot="public" final="yes">
    <compoundname>std::experimental::coroutine_traits&lt; void, P... &gt;::promise_type</compoundname>
    <includes refid="return_8h" local="no">return.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structstd_1_1experimental_1_1coroutine__traits_3_01void_00_01P_8_8_8_01_4_1_1promise__type_1a826583f86a52f48546382f03e36346c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classstd_1_1suspend__never" kindref="compound">suspend_never</ref></type>
        <definition>suspend_never std::experimental::coroutine_traits&lt; void, P... &gt;::promise_type::initial_suspend</definition>
        <argsstring>() noexcept</argsstring>
        <name>initial_suspend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/return.h" line="196" column="1" bodyfile="interface/coroutine/return.h" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="structstd_1_1experimental_1_1coroutine__traits_3_01void_00_01P_8_8_8_01_4_1_1promise__type_1a6fe81d301e84ea0b01163c98a86590e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classstd_1_1suspend__never" kindref="compound">suspend_never</ref></type>
        <definition>suspend_never std::experimental::coroutine_traits&lt; void, P... &gt;::promise_type::final_suspend</definition>
        <argsstring>() noexcept</argsstring>
        <name>final_suspend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/return.h" line="199" column="1" bodyfile="interface/coroutine/return.h" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="structstd_1_1experimental_1_1coroutine__traits_3_01void_00_01P_8_8_8_01_4_1_1promise__type_1a50b8db675add487b7f01bb5010e3340a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void std::experimental::coroutine_traits&lt; void, P... &gt;::promise_type::unhandled_exception</definition>
        <argsstring>() noexcept(false)</argsstring>
        <name>unhandled_exception</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/return.h" line="202" column="1" bodyfile="interface/coroutine/return.h" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="structstd_1_1experimental_1_1coroutine__traits_3_01void_00_01P_8_8_8_01_4_1_1promise__type_1acde97e9dda8acde94022d87715c4c572" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void std::experimental::coroutine_traits&lt; void, P... &gt;::promise_type::return_void</definition>
        <argsstring>() noexcept</argsstring>
        <name>return_void</name>
        <briefdescription>
<para>Since this is template specialization for <computeroutput>void</computeroutput>, the return type is fixed to <computeroutput>void</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/return.h" line="208" column="1" bodyfile="interface/coroutine/return.h" bodystart="208" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="structstd_1_1experimental_1_1coroutine__traits_3_01void_00_01P_8_8_8_01_4_1_1promise__type_1a10e8c0a22fee7cf2b293e93414a00cd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void std::experimental::coroutine_traits&lt; void, P... &gt;::promise_type::get_return_object</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_return_object</name>
        <briefdescription>
<para>Since this is template specialization for <computeroutput>void</computeroutput>, the return type is fixed to <computeroutput>void</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/return.h" line="213" column="1" bodyfile="interface/coroutine/return.h" bodystart="213" bodyend="214"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="interface/coroutine/return.h" line="195" column="1" bodyfile="interface/coroutine/return.h" bodystart="195" bodyend="215"/>
    <listofallmembers>
      <member refid="structstd_1_1experimental_1_1coroutine__traits_3_01void_00_01P_8_8_8_01_4_1_1promise__type_1a6fe81d301e84ea0b01163c98a86590e5" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_traits&lt; void, P... &gt;::promise_type</scope><name>final_suspend</name></member>
      <member refid="structstd_1_1experimental_1_1coroutine__traits_3_01void_00_01P_8_8_8_01_4_1_1promise__type_1a10e8c0a22fee7cf2b293e93414a00cd3" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_traits&lt; void, P... &gt;::promise_type</scope><name>get_return_object</name></member>
      <member refid="structstd_1_1experimental_1_1coroutine__traits_3_01void_00_01P_8_8_8_01_4_1_1promise__type_1a826583f86a52f48546382f03e36346c5" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_traits&lt; void, P... &gt;::promise_type</scope><name>initial_suspend</name></member>
      <member refid="structstd_1_1experimental_1_1coroutine__traits_3_01void_00_01P_8_8_8_01_4_1_1promise__type_1acde97e9dda8acde94022d87715c4c572" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_traits&lt; void, P... &gt;::promise_type</scope><name>return_void</name></member>
      <member refid="structstd_1_1experimental_1_1coroutine__traits_3_01void_00_01P_8_8_8_01_4_1_1promise__type_1a50b8db675add487b7f01bb5010e3340a" prot="public" virt="non-virtual"><scope>std::experimental::coroutine_traits&lt; void, P... &gt;::promise_type</scope><name>unhandled_exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
