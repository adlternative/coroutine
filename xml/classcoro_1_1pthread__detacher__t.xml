<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classcoro_1_1pthread__detacher__t" kind="class" language="C++" prot="public" final="yes">
    <compoundname>coro::pthread_detacher_t</compoundname>
    <basecompoundref refid="classcoro_1_1pthread__knower__t" prot="public" virt="non-virtual">coro::pthread_knower_t</basecompoundref>
    <includes refid="pthread_8h" local="no">pthread.h</includes>
    <innerclass refid="classcoro_1_1pthread__detacher__t_1_1promise__type" prot="public">coro::pthread_detacher_t::promise_type</innerclass>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classcoro_1_1pthread__detacher__t_1a63f3731204515d60ab4ae40c89061503" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coro::pthread_detacher_t::try_detach</definition>
        <argsstring>() noexcept(false)</argsstring>
        <name>try_detach</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>pthread_detach </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>system_error</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/pthread.h" line="191" column="1" bodyfile="modules/system/pthread.cpp" bodystart="52" bodyend="60"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcoro_1_1pthread__detacher__t_1a9beacbbbc15bd05e2fdde191f3c1a269" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>coro::pthread_detacher_t::~pthread_detacher_t</definition>
        <argsstring>() noexcept(false)</argsstring>
        <name>~pthread_detacher_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/pthread.h" line="194" column="1" bodyfile="interface/coroutine/pthread.h" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classcoro_1_1pthread__detacher__t_1a85640f0f5d742681d0c3d3fae3746898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>coro::pthread_detacher_t::pthread_detacher_t</definition>
        <argsstring>(promise_type *p) noexcept(false)</argsstring>
        <name>pthread_detacher_t</name>
        <param>
          <type><ref refid="classcoro_1_1pthread__detacher__t_1_1promise__type" kindref="compound">promise_type</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/pthread.h" line="200" column="1" bodyfile="modules/system/pthread.cpp" bodystart="46" bodyend="50"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Special return type that wraps <computeroutput>pthread_detach</computeroutput> </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="328">
        <label>coro::pthread_knower_t</label>
        <link refid="classcoro_1_1pthread__knower__t"/>
      </node>
      <node id="327">
        <label>coro::pthread_detacher_t</label>
        <link refid="classcoro_1_1pthread__detacher__t"/>
        <childnode refid="328" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="331">
        <label>coro::pthread_spawn_promise</label>
        <link refid="classcoro_1_1pthread__spawn__promise"/>
      </node>
      <node id="330">
        <label>coro::pthread_knower_t</label>
        <link refid="classcoro_1_1pthread__knower__t"/>
        <childnode refid="331" relation="usage">
          <edgelabel>promise</edgelabel>
        </childnode>
      </node>
      <node id="329">
        <label>coro::pthread_detacher_t</label>
        <link refid="classcoro_1_1pthread__detacher__t"/>
        <childnode refid="330" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="interface/coroutine/pthread.h" line="170" column="1" bodyfile="interface/coroutine/pthread.h" bodystart="170" bodyend="201"/>
    <listofallmembers>
      <member refid="classcoro_1_1pthread__knower__t_1aaba88045030e8d395299c27a24b99ba2" prot="public" virt="non-virtual"><scope>coro::pthread_detacher_t</scope><name>operator pthread_t</name></member>
      <member refid="classcoro_1_1pthread__knower__t_1a9bdae50f877e7c639c28507f28eb1492" prot="protected" virt="non-virtual"><scope>coro::pthread_detacher_t</scope><name>promise</name></member>
      <member refid="classcoro_1_1pthread__detacher__t_1a85640f0f5d742681d0c3d3fae3746898" prot="public" virt="non-virtual"><scope>coro::pthread_detacher_t</scope><name>pthread_detacher_t</name></member>
      <member refid="classcoro_1_1pthread__knower__t_1a02ec12b031636ecd0eba2c8ebf99614a" prot="protected" virt="non-virtual"><scope>coro::pthread_detacher_t</scope><name>pthread_knower_t</name></member>
      <member refid="classcoro_1_1pthread__detacher__t_1a63f3731204515d60ab4ae40c89061503" prot="private" virt="non-virtual"><scope>coro::pthread_detacher_t</scope><name>try_detach</name></member>
      <member refid="classcoro_1_1pthread__detacher__t_1a9beacbbbc15bd05e2fdde191f3c1a269" prot="public" virt="non-virtual"><scope>coro::pthread_detacher_t</scope><name>~pthread_detacher_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
