<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classchannel__reader" kind="class" language="C++" prot="public">
    <compoundname>channel_reader</compoundname>
    <derivedcompoundref refid="classchannel__peeker" prot="protected" virt="non-virtual">channel_peeker&lt; T, M &gt;</derivedcompoundref>
    <includes refid="channel_8hpp" local="no">channel.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename M</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classchannel__reader_1ae9db3577650b39565659c7e67f444a47" prot="public" static="no">
        <type>T</type>
        <definition>using channel_reader&lt; T, M &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="142" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classchannel__reader_1aa6d73eda2c62de2f7c9640de285246fa" prot="public" static="no">
        <type>T *</type>
        <definition>using channel_reader&lt; T, M &gt;::pointer =  T*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="143" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classchannel__reader_1a9cac01060750b1255000091210c24236" prot="public" static="no">
        <type>T &amp;</type>
        <definition>using channel_reader&lt; T, M &gt;::reference =  T&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="144" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classchannel__reader_1a6978f5dc63dc961a01ac446bca9109c0" prot="public" static="no">
        <type><ref refid="classchannel" kindref="compound">channel</ref>&lt; T, M &gt;</type>
        <definition>using channel_reader&lt; T, M &gt;::channel_type =  channel&lt;T, M&gt;</definition>
        <argsstring></argsstring>
        <name>channel_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="145" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classchannel__reader_1ade1c425b162179dcdddada235724c7b9" prot="private" static="no">
        <type>typename <ref refid="classinternal_1_1list" kindref="compound">channel_type::reader_list</ref></type>
        <definition>using channel_reader&lt; T, M &gt;::reader_list =  typename channel_type::reader_list</definition>
        <argsstring></argsstring>
        <name>reader_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="148" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classchannel__reader_1af9d055aff99c10e3963eefbdcbce58c5" prot="private" static="no">
        <type>typename <ref refid="classchannel__writer" kindref="compound">channel_type::writer</ref></type>
        <definition>using channel_reader&lt; T, M &gt;::writer =  typename channel_type::writer</definition>
        <argsstring></argsstring>
        <name>writer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="149" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classchannel__reader_1a7dd3e80320f4342a458a289c562c8fd7" prot="private" static="no">
        <type>typename <ref refid="classinternal_1_1list" kindref="compound">channel_type::writer_list</ref></type>
        <definition>using channel_reader&lt; T, M &gt;::writer_list =  typename channel_type::writer_list</definition>
        <argsstring></argsstring>
        <name>writer_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="150" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classchannel__reader_1add73a499fe9417bd39ea599980719de0" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend channel_reader&lt; T, M &gt;::channel_type</definition>
        <argsstring></argsstring>
        <name>channel_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="152" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchannel__reader_1aed56d9ab37660d431bb06a05b49cd169" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend channel_reader&lt; T, M &gt;::writer</definition>
        <argsstring></argsstring>
        <name>writer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="153" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchannel__reader_1a50135926201a0dca9b7d692851ec755a" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend channel_reader&lt; T, M &gt;::reader_list</definition>
        <argsstring></argsstring>
        <name>reader_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="154" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classchannel__reader_1aea516c94c54055797b146d4d899ccb62" prot="protected" static="no" mutable="yes">
        <type><ref refid="classchannel__reader_1aa6d73eda2c62de2f7c9640de285246fa" kindref="member">pointer</ref></type>
        <definition>pointer channel_reader&lt; T, M &gt;::ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="157" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchannel__reader_1aa1491ab51380e4d9cf1493ecc8f92c68" prot="protected" static="no" mutable="yes">
        <type>void *</type>
        <definition>void* channel_reader&lt; T, M &gt;::frame</definition>
        <argsstring></argsstring>
        <name>frame</name>
        <briefdescription>
<para>Address of value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="158" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchannel__reader_1a39e153a488adc71c3b30eec816e091d8" prot="protected" static="no" mutable="no">
        <type>union channel_reader::@0</type>
        <definition>union channel_reader::@0 channel_reader&lt; T, M &gt;::@1</definition>
        <argsstring></argsstring>
        <name>@1</name>
        <briefdescription>
<para>Resumeable Handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="162" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classchannel__reader_1ad055a7fee5734fd6f31d5efbf09e5854" prot="public" static="no" mutable="no">
        <type><ref refid="classchannel__reader" kindref="compound">channel_reader</ref> *</type>
        <definition>channel_reader* channel_reader&lt; T, M &gt;::next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="160" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchannel__reader_1aa488a6833a9793694566f629f60ff699" prot="public" static="no" mutable="no">
        <type><ref refid="classchannel__reader_1a6978f5dc63dc961a01ac446bca9109c0" kindref="member">channel_type</ref> *</type>
        <definition>channel_type* channel_reader&lt; T, M &gt;::chan</definition>
        <argsstring></argsstring>
        <name>chan</name>
        <briefdescription>
<para>Next reader in channel. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="161" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classchannel__reader_1aa286327aba3a9d1a08d998e1ab18da89" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>channel_reader&lt; T, M &gt;::channel_reader</definition>
        <argsstring>(channel_type &amp;ch) noexcept(false)</argsstring>
        <name>channel_reader</name>
        <param>
          <type><ref refid="classchannel__reader_1a6978f5dc63dc961a01ac446bca9109c0" kindref="member">channel_type</ref> &amp;</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="165" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classchannel__reader_1ac6accd26fa11711e7091537f1b27d627" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>channel_reader&lt; T, M &gt;::channel_reader</definition>
        <argsstring>(const channel_reader &amp;) noexcept=delete</argsstring>
        <name>channel_reader</name>
        <param>
          <type>const <ref refid="classchannel__reader" kindref="compound">channel_reader</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classchannel__reader_1a54ec29dfabe01c0000fa6b928237a194" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchannel__reader" kindref="compound">channel_reader</ref> &amp;</type>
        <definition>channel_reader&amp; channel_reader&lt; T, M &gt;::operator=</definition>
        <argsstring>(const channel_reader &amp;) noexcept=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classchannel__reader" kindref="compound">channel_reader</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classchannel__reader_1ac2abb1e1c1bb7dc79c7b0e174277beea" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>channel_reader&lt; T, M &gt;::channel_reader</definition>
        <argsstring>(channel_reader &amp;&amp;) noexcept=delete</argsstring>
        <name>channel_reader</name>
        <param>
          <type><ref refid="classchannel__reader" kindref="compound">channel_reader</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classchannel__reader_1a46c244e5fb743c2e3098d26a56a5094a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchannel__reader" kindref="compound">channel_reader</ref> &amp;</type>
        <definition>channel_reader&amp; channel_reader&lt; T, M &gt;::operator=</definition>
        <argsstring>(channel_reader &amp;&amp;) noexcept=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classchannel__reader" kindref="compound">channel_reader</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="171" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classchannel__reader_1a2775ebd8e22ae2c56b3ce0395c1c4b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>channel_reader&lt; T, M &gt;::~channel_reader</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~channel_reader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classchannel__reader_1a80ec5a50e00b39129a7dcbf191515200" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool channel_reader&lt; T, M &gt;::await_ready</definition>
        <argsstring>() const noexcept(false)</argsstring>
        <name>await_ready</name>
        <briefdescription>
<para>Lock the channel and find available <computeroutput><ref refid="classchannel__writer" kindref="compound">channel_writer</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true Matched with <computeroutput><ref refid="classchannel__writer" kindref="compound">channel_writer</ref></computeroutput> </para></simplesect>
<simplesect kind="return"><para>false There was no available <computeroutput><ref refid="classchannel__writer" kindref="compound">channel_writer</ref></computeroutput>. The channel will be **lock**ed for this case. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="184" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="184" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classchannel__reader_1a22cf1eb07a344b05cba4d4dc3dc38135" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void channel_reader&lt; T, M &gt;::await_suspend</definition>
        <argsstring>(coroutine_handle&lt; void &gt; coro) noexcept(false)</argsstring>
        <name>await_suspend</name>
        <param>
          <type><ref refid="structstd_1_1coroutine__handle" kindref="compound">coroutine_handle</ref>&lt; void &gt;</type>
          <declname>coro</declname>
        </param>
        <briefdescription>
<para>Push to the channel and wait for <computeroutput><ref refid="classchannel__writer" kindref="compound">channel_writer</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The channel will be **unlock**ed after return. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coro</parametername>
</parameternamelist>
<parameterdescription>
<para>Remember current coroutine&apos;s handle to resume later </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classchannel__reader_1a80ec5a50e00b39129a7dcbf191515200" kindref="member">await_ready</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="204" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="204" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classchannel__reader_1ae81ce084fa91e7af9c254636e65f0c90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto channel_reader&lt; T, M &gt;::await_resume</definition>
        <argsstring>() noexcept(false) -&gt; std::tuple&lt; value_type, bool &gt;</argsstring>
        <name>await_resume</name>
        <briefdescription>
<para>Returns value from writer coroutine, and <computeroutput>bool</computeroutput> indicator for the associtated channel&apos;s destruction. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>tuple&lt;value_type, bool&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="219" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="219" bodyend="231"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Awaitable type for <computeroutput>channel</computeroutput>&apos;s read operation. It moves the value from writer coroutine&apos;s frame to reader coroutine&apos;s frame. </para>    </briefdescription>
    <detaileddescription>
<para><programlisting><codeline><highlight class="normal">void<sp/>read_from(channel&lt;int&gt;&amp;<sp/>ch,<sp/>int&amp;<sp/>ref,<sp/>bool<sp/>ok<sp/>=<sp/>false)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>tie(ref,<sp/>ok)<sp/>=<sp/>co_await<sp/>ch.read();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if(ok<sp/>==<sp/>false)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>//<sp/>channel<sp/>is<sp/>under<sp/>destruction<sp/>!!!</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>M</parametername>
</parameternamelist>
<parameterdescription>
<para>mutex for the channel </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classchannel__writer" kindref="compound">channel_writer</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="199">
        <label>channel_peeker&lt; T, M &gt;</label>
        <link refid="classchannel__peeker"/>
        <childnode refid="198" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="198">
        <label>channel_reader&lt; T, M &gt;</label>
        <link refid="classchannel__reader"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="201">
        <label>channel&lt; T, M &gt;</label>
        <link refid="classchannel"/>
        <childnode refid="202" relation="private-inheritance">
        </childnode>
        <childnode refid="203" relation="private-inheritance">
        </childnode>
      </node>
      <node id="202">
        <label>internal::list&lt; channel_reader&lt; T, M &gt; &gt;</label>
        <link refid="classinternal_1_1list"/>
      </node>
      <node id="200">
        <label>channel_reader&lt; T, M &gt;</label>
        <link refid="classchannel__reader"/>
        <childnode refid="201" relation="usage">
          <edgelabel>chan</edgelabel>
        </childnode>
        <childnode refid="200" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="203">
        <label>internal::list&lt; channel_writer&lt; T, M &gt; &gt;</label>
        <link refid="classinternal_1_1list"/>
      </node>
    </collaborationgraph>
    <location file="interface/coroutine/channel.hpp" line="116" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="116" bodyend="-1"/>
    <listofallmembers>
      <member refid="classchannel__reader_1a80ec5a50e00b39129a7dcbf191515200" prot="public" virt="non-virtual"><scope>channel_reader</scope><name>await_ready</name></member>
      <member refid="classchannel__reader_1ae81ce084fa91e7af9c254636e65f0c90" prot="public" virt="non-virtual"><scope>channel_reader</scope><name>await_resume</name></member>
      <member refid="classchannel__reader_1a22cf1eb07a344b05cba4d4dc3dc38135" prot="public" virt="non-virtual"><scope>channel_reader</scope><name>await_suspend</name></member>
      <member refid="classchannel__reader_1aa488a6833a9793694566f629f60ff699" prot="public" virt="non-virtual"><scope>channel_reader</scope><name>chan</name></member>
      <member refid="classchannel__reader_1aa286327aba3a9d1a08d998e1ab18da89" prot="protected" virt="non-virtual"><scope>channel_reader</scope><name>channel_reader</name></member>
      <member refid="classchannel__reader_1ac6accd26fa11711e7091537f1b27d627" prot="protected" virt="non-virtual"><scope>channel_reader</scope><name>channel_reader</name></member>
      <member refid="classchannel__reader_1ac2abb1e1c1bb7dc79c7b0e174277beea" prot="protected" virt="non-virtual"><scope>channel_reader</scope><name>channel_reader</name></member>
      <member refid="classchannel__reader_1a6978f5dc63dc961a01ac446bca9109c0" prot="public" virt="non-virtual"><scope>channel_reader</scope><name>channel_type</name></member>
      <member refid="classchannel__reader_1add73a499fe9417bd39ea599980719de0" prot="private" virt="non-virtual"><scope>channel_reader</scope><name>channel_type</name></member>
      <member refid="classchannel__reader_1aa1491ab51380e4d9cf1493ecc8f92c68" prot="protected" virt="non-virtual"><scope>channel_reader</scope><name>frame</name></member>
      <member refid="classchannel__reader_1ad055a7fee5734fd6f31d5efbf09e5854" prot="public" virt="non-virtual"><scope>channel_reader</scope><name>next</name></member>
      <member refid="classchannel__reader_1a54ec29dfabe01c0000fa6b928237a194" prot="protected" virt="non-virtual"><scope>channel_reader</scope><name>operator=</name></member>
      <member refid="classchannel__reader_1a46c244e5fb743c2e3098d26a56a5094a" prot="protected" virt="non-virtual"><scope>channel_reader</scope><name>operator=</name></member>
      <member refid="classchannel__reader_1aa6d73eda2c62de2f7c9640de285246fa" prot="public" virt="non-virtual"><scope>channel_reader</scope><name>pointer</name></member>
      <member refid="classchannel__reader_1aea516c94c54055797b146d4d899ccb62" prot="protected" virt="non-virtual"><scope>channel_reader</scope><name>ptr</name></member>
      <member refid="classchannel__reader_1ade1c425b162179dcdddada235724c7b9" prot="private" virt="non-virtual"><scope>channel_reader</scope><name>reader_list</name></member>
      <member refid="classchannel__reader_1a50135926201a0dca9b7d692851ec755a" prot="private" virt="non-virtual"><scope>channel_reader</scope><name>reader_list</name></member>
      <member refid="classchannel__reader_1a9cac01060750b1255000091210c24236" prot="public" virt="non-virtual"><scope>channel_reader</scope><name>reference</name></member>
      <member refid="classchannel__reader_1ae9db3577650b39565659c7e67f444a47" prot="public" virt="non-virtual"><scope>channel_reader</scope><name>value_type</name></member>
      <member refid="classchannel__reader_1af9d055aff99c10e3963eefbdcbce58c5" prot="private" virt="non-virtual"><scope>channel_reader</scope><name>writer</name></member>
      <member refid="classchannel__reader_1aed56d9ab37660d431bb06a05b49cd169" prot="private" virt="non-virtual"><scope>channel_reader</scope><name>writer</name></member>
      <member refid="classchannel__reader_1a7dd3e80320f4342a458a289c562c8fd7" prot="private" virt="non-virtual"><scope>channel_reader</scope><name>writer_list</name></member>
      <member refid="classchannel__reader_1a2775ebd8e22ae2c56b3ce0395c1c4b9d" prot="public" virt="non-virtual"><scope>channel_reader</scope><name>~channel_reader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
