<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classstd_1_1experimental_1_1suspend__always" kind="class" language="C++" prot="public">
    <compoundname>std::experimental::suspend_always</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classstd_1_1experimental_1_1suspend__always_1aac17bbdbc141b9c3dbee8469804fc1dc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool std::experimental::suspend_always::await_ready</definition>
        <argsstring>() const noexcept</argsstring>
        <name>await_ready</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="413" column="20" bodyfile="interface/coroutine/frame.h" bodystart="413" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1experimental_1_1suspend__always_1a1b25ef59640cbe81ff7c8ed247d0c979" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void std::experimental::suspend_always::await_resume</definition>
        <argsstring>() const noexcept</argsstring>
        <name>await_resume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="416" column="20" bodyfile="interface/coroutine/frame.h" bodystart="416" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1experimental_1_1suspend__always_1a0b2a4d3194623755dd7fd89367763f93" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void std::experimental::suspend_always::await_suspend</definition>
        <argsstring>(coroutine_handle&lt; void &gt;) const noexcept</argsstring>
        <name>await_suspend</name>
        <param>
          <type><ref refid="classstd_1_1experimental_1_1coroutine__handle" kindref="compound">coroutine_handle</ref>&lt; void &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/frame.h" line="418" column="10" bodyfile="interface/coroutine/frame.h" bodystart="418" bodyend="420"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="interface/coroutine/frame.h" line="411" column="21" bodyfile="interface/coroutine/frame.h" bodystart="411" bodyend="421"/>
    <listofallmembers>
      <member refid="classstd_1_1experimental_1_1suspend__always_1aac17bbdbc141b9c3dbee8469804fc1dc" prot="public" virt="non-virtual"><scope>std::experimental::suspend_always</scope><name>await_ready</name></member>
      <member refid="classstd_1_1experimental_1_1suspend__always_1a1b25ef59640cbe81ff7c8ed247d0c979" prot="public" virt="non-virtual"><scope>std::experimental::suspend_always</scope><name>await_resume</name></member>
      <member refid="classstd_1_1experimental_1_1suspend__always_1a0b2a4d3194623755dd7fd89367763f93" prot="public" virt="non-virtual"><scope>std::experimental::suspend_always</scope><name>await_suspend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
