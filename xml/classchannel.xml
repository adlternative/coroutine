<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classchannel" kind="class" language="C++" prot="public">
    <compoundname>channel</compoundname>
    <basecompoundref refid="classinternal_1_1list" prot="private" virt="non-virtual">internal::list&lt; channel_reader&lt; T, M &gt; &gt;</basecompoundref>
    <basecompoundref refid="classinternal_1_1list" prot="private" virt="non-virtual">internal::list&lt; channel_writer&lt; T, M &gt; &gt;</basecompoundref>
    <includes refid="channel_8hpp" local="no">channel.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>M</declname>
        <defname>M</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classchannel_1ad74597ca991006c04ffb977ce16da8de" prot="public" static="no">
        <type>T</type>
        <definition>using channel&lt; T, M &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="360" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classchannel_1ab6f3c55e61fa490bf0ba391f9d876d79" prot="public" static="no">
        <type><ref refid="classchannel_1ad74597ca991006c04ffb977ce16da8de" kindref="member">value_type</ref> *</type>
        <definition>using channel&lt; T, M &gt;::pointer =  value_type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="361" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classchannel_1a76f514a6490fa439fa4688e6a555d83c" prot="public" static="no">
        <type><ref refid="classchannel_1ad74597ca991006c04ffb977ce16da8de" kindref="member">value_type</ref> &amp;</type>
        <definition>using channel&lt; T, M &gt;::reference =  value_type&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="362" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classchannel_1a9fbf1ecad8ff64ba4f32102c2e5d8228" prot="public" static="no">
        <type>M</type>
        <definition>using channel&lt; T, M &gt;::mutex_type =  M</definition>
        <argsstring></argsstring>
        <name>mutex_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="363" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="363" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classchannel_1aa7d1f010a1b88cf3a7fa3350ec9eb262" prot="private" static="no">
        <type><ref refid="classchannel__reader" kindref="compound">channel_reader</ref>&lt; <ref refid="classchannel_1ad74597ca991006c04ffb977ce16da8de" kindref="member">value_type</ref>, <ref refid="classchannel_1a9fbf1ecad8ff64ba4f32102c2e5d8228" kindref="member">mutex_type</ref> &gt;</type>
        <definition>using channel&lt; T, M &gt;::reader =  channel_reader&lt;value_type, mutex_type&gt;</definition>
        <argsstring></argsstring>
        <name>reader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="366" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classchannel_1a275ac66b9b775a7423f4fb090ea01e86" prot="private" static="no">
        <type><ref refid="classinternal_1_1list" kindref="compound">internal::list</ref>&lt; <ref refid="classchannel__reader" kindref="compound">reader</ref> &gt;</type>
        <definition>using channel&lt; T, M &gt;::reader_list =  internal::list&lt;reader&gt;</definition>
        <argsstring></argsstring>
        <name>reader_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="367" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classchannel_1a639dfb7f219f194b943a8276f704c39a" prot="private" static="no">
        <type><ref refid="classchannel__writer" kindref="compound">channel_writer</ref>&lt; <ref refid="classchannel_1ad74597ca991006c04ffb977ce16da8de" kindref="member">value_type</ref>, <ref refid="classchannel_1a9fbf1ecad8ff64ba4f32102c2e5d8228" kindref="member">mutex_type</ref> &gt;</type>
        <definition>using channel&lt; T, M &gt;::writer =  channel_writer&lt;value_type, mutex_type&gt;</definition>
        <argsstring></argsstring>
        <name>writer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="368" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classchannel_1a3b851f25b9d47791a3c03d718ad0d499" prot="private" static="no">
        <type><ref refid="classinternal_1_1list" kindref="compound">internal::list</ref>&lt; <ref refid="classchannel__writer" kindref="compound">writer</ref> &gt;</type>
        <definition>using channel&lt; T, M &gt;::writer_list =  internal::list&lt;writer&gt;</definition>
        <argsstring></argsstring>
        <name>writer_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="369" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classchannel_1a94ce29a4e88ac4278623854e2b729a5b" prot="private" static="no">
        <type><ref refid="classchannel__peeker" kindref="compound">channel_peeker</ref>&lt; <ref refid="classchannel_1ad74597ca991006c04ffb977ce16da8de" kindref="member">value_type</ref>, <ref refid="classchannel_1a9fbf1ecad8ff64ba4f32102c2e5d8228" kindref="member">mutex_type</ref> &gt;</type>
        <definition>using channel&lt; T, M &gt;::peeker =  channel_peeker&lt;value_type, mutex_type&gt;</definition>
        <argsstring></argsstring>
        <name>peeker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="370" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="370" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classchannel_1a51d94f54c197af517c9e2c589a84b58d" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend channel&lt; T, M &gt;::reader</definition>
        <argsstring></argsstring>
        <name>reader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="372" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchannel_1a027bdf92ab9603838832eb2372d93c91" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend channel&lt; T, M &gt;::writer</definition>
        <argsstring></argsstring>
        <name>writer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="373" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchannel_1a81b939148ec4d6c7b8d6cef83a0dfac6" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend channel&lt; T, M &gt;::peeker</definition>
        <argsstring></argsstring>
        <name>peeker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="374" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchannel_1ad59706908a2c7b5403cfc8ada6a452ac" prot="private" static="no" mutable="no">
        <type><ref refid="classchannel_1a9fbf1ecad8ff64ba4f32102c2e5d8228" kindref="member">mutex_type</ref></type>
        <definition>mutex_type channel&lt; T, M &gt;::mtx</definition>
        <argsstring></argsstring>
        <name>mtx</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="377" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="377" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classchannel_1ae78463e4465ec60d0f59900ab9b3acd8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>channel&lt; T, M &gt;::channel</definition>
        <argsstring>(const channel &amp;) noexcept(false)=delete</argsstring>
        <name>channel</name>
        <param>
          <type>const <ref refid="classchannel" kindref="compound">channel</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classchannel_1a12027223b8ed72cc54aaa7a0d954c011" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>channel&lt; T, M &gt;::channel</definition>
        <argsstring>(channel &amp;&amp;) noexcept(false)=delete</argsstring>
        <name>channel</name>
        <param>
          <type><ref refid="classchannel" kindref="compound">channel</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classchannel_1a24717c815e37c603172ceb49fd4c1e0c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchannel" kindref="compound">channel</ref> &amp;</type>
        <definition>channel&amp; channel&lt; T, M &gt;::operator=</definition>
        <argsstring>(const channel &amp;) noexcept(false)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classchannel" kindref="compound">channel</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="382" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classchannel_1a3f6d8f994fe12cbcd30ab450c9b6776b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchannel" kindref="compound">channel</ref> &amp;</type>
        <definition>channel&amp; channel&lt; T, M &gt;::operator=</definition>
        <argsstring>(channel &amp;&amp;) noexcept(false)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classchannel" kindref="compound">channel</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="383" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classchannel_1aaf4f17bd09c369eed59b0a3372759ea5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>channel&lt; T, M &gt;::channel</definition>
        <argsstring>() noexcept(false)</argsstring>
        <name>channel</name>
        <briefdescription>
<para>initialized 2 linked list and given mutex </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="389" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="389" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="classchannel_1a3d930bce6d71bf3200f17152eddcbac0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>channel&lt; T, M &gt;::~channel</definition>
        <argsstring>() noexcept(false)</argsstring>
        <name>~channel</name>
        <briefdescription>
<para>Resume all attached coroutine read/write operations. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Channel can&apos;t provide exception guarantee since the destruction contains coroutines&apos; resume</para></simplesect>
If the channel is raced hardly, some coroutines can be enqueued into list just after this destructor unlocks mutex.</para><para>Unfortunately, this can&apos;t be detected at once since we have 2 list (readers/writers) in the channel.</para><para>Current implementation allows checking repeatedly to reduce the probability of such interleaving. <bold>Modify the repeat count in the code</bold> if the situation occurs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="407" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="407" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="classchannel_1a0c4217bf051739ef25742e3ebcf01546" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) channel&lt; T, M &gt;::write</definition>
        <argsstring>(reference ref) noexcept(false)</argsstring>
        <name>write</name>
        <param>
          <type><ref refid="classchannel_1a76f514a6490fa439fa4688e6a555d83c" kindref="member">reference</ref></type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>construct a new writer which references this channel </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>T&amp;</computeroutput> which holds a value to be <computeroutput>move</computeroutput>d to reader. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classchannel__writer" kindref="compound">channel_writer</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="439" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="439" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="classchannel_1a4742e9ec6c3c18a8c20ee6c30a088e9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) channel&lt; T, M &gt;::read</definition>
        <argsstring>() noexcept(false)</argsstring>
        <name>read</name>
        <briefdescription>
<para>construct a new reader which references this channel </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classchannel__reader" kindref="compound">channel_reader</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="447" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="447" bodyend="449"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>C++ Coroutines based channel. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>It works as synchronizer of <computeroutput><ref refid="classchannel__writer" kindref="compound">channel_writer</ref></computeroutput>/<computeroutput><ref refid="classchannel__reader" kindref="compound">channel_reader</ref></computeroutput>. The parameter mutex must meet the requirement of the synchronization.</para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>M</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the mutex(lockable) for its member </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="172">
        <label>channel&lt; T, M &gt;</label>
        <link refid="classchannel"/>
        <childnode refid="173" relation="private-inheritance">
        </childnode>
        <childnode refid="174" relation="private-inheritance">
        </childnode>
      </node>
      <node id="173">
        <label>internal::list&lt; channel_reader&lt; T, M &gt; &gt;</label>
        <link refid="classinternal_1_1list"/>
      </node>
      <node id="174">
        <label>internal::list&lt; channel_writer&lt; T, M &gt; &gt;</label>
        <link refid="classinternal_1_1list"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="175">
        <label>channel&lt; T, M &gt;</label>
        <link refid="classchannel"/>
        <childnode refid="176" relation="private-inheritance">
        </childnode>
        <childnode refid="177" relation="private-inheritance">
        </childnode>
      </node>
      <node id="176">
        <label>internal::list&lt; channel_reader&lt; T, M &gt; &gt;</label>
        <link refid="classinternal_1_1list"/>
      </node>
      <node id="177">
        <label>internal::list&lt; channel_writer&lt; T, M &gt; &gt;</label>
        <link refid="classinternal_1_1list"/>
      </node>
    </collaborationgraph>
    <location file="interface/coroutine/channel.hpp" line="114" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="114" bodyend="-1"/>
    <listofallmembers>
      <member refid="classchannel_1ae78463e4465ec60d0f59900ab9b3acd8" prot="private" virt="non-virtual"><scope>channel</scope><name>channel</name></member>
      <member refid="classchannel_1a12027223b8ed72cc54aaa7a0d954c011" prot="private" virt="non-virtual"><scope>channel</scope><name>channel</name></member>
      <member refid="classchannel_1aaf4f17bd09c369eed59b0a3372759ea5" prot="public" virt="non-virtual"><scope>channel</scope><name>channel</name></member>
      <member refid="classinternal_1_1list_1ac846e27cfb9646e8f5de0d0a5c48d742" prot="private" virt="non-virtual" ambiguityscope="list&lt; channel_reader&lt; T, M &gt; &gt;::"><scope>channel</scope><name>is_empty</name></member>
      <member refid="classinternal_1_1list_1ac846e27cfb9646e8f5de0d0a5c48d742" prot="private" virt="non-virtual" ambiguityscope="list&lt; channel_writer&lt; T, M &gt; &gt;::"><scope>channel</scope><name>is_empty</name></member>
      <member refid="classchannel_1ad59706908a2c7b5403cfc8ada6a452ac" prot="private" virt="non-virtual"><scope>channel</scope><name>mtx</name></member>
      <member refid="classchannel_1a9fbf1ecad8ff64ba4f32102c2e5d8228" prot="public" virt="non-virtual"><scope>channel</scope><name>mutex_type</name></member>
      <member refid="classchannel_1a24717c815e37c603172ceb49fd4c1e0c" prot="private" virt="non-virtual"><scope>channel</scope><name>operator=</name></member>
      <member refid="classchannel_1a3f6d8f994fe12cbcd30ab450c9b6776b" prot="private" virt="non-virtual"><scope>channel</scope><name>operator=</name></member>
      <member refid="classchannel_1a94ce29a4e88ac4278623854e2b729a5b" prot="private" virt="non-virtual"><scope>channel</scope><name>peeker</name></member>
      <member refid="classchannel_1a81b939148ec4d6c7b8d6cef83a0dfac6" prot="private" virt="non-virtual"><scope>channel</scope><name>peeker</name></member>
      <member refid="classchannel_1ab6f3c55e61fa490bf0ba391f9d876d79" prot="public" virt="non-virtual"><scope>channel</scope><name>pointer</name></member>
      <member refid="classinternal_1_1list_1a7b39507e869c5cfa3abf7376878abae1" prot="private" virt="non-virtual" ambiguityscope="list&lt; channel_reader&lt; T, M &gt; &gt;::"><scope>channel</scope><name>pop</name></member>
      <member refid="classinternal_1_1list_1a7b39507e869c5cfa3abf7376878abae1" prot="private" virt="non-virtual" ambiguityscope="list&lt; channel_writer&lt; T, M &gt; &gt;::"><scope>channel</scope><name>pop</name></member>
      <member refid="classinternal_1_1list_1a06db9566686875fbb1824d1700e8a3c2" prot="private" virt="non-virtual" ambiguityscope="list&lt; channel_reader&lt; T, M &gt; &gt;::"><scope>channel</scope><name>push</name></member>
      <member refid="classinternal_1_1list_1a06db9566686875fbb1824d1700e8a3c2" prot="private" virt="non-virtual" ambiguityscope="list&lt; channel_writer&lt; T, M &gt; &gt;::"><scope>channel</scope><name>push</name></member>
      <member refid="classchannel_1a4742e9ec6c3c18a8c20ee6c30a088e9a" prot="public" virt="non-virtual"><scope>channel</scope><name>read</name></member>
      <member refid="classchannel_1aa7d1f010a1b88cf3a7fa3350ec9eb262" prot="private" virt="non-virtual"><scope>channel</scope><name>reader</name></member>
      <member refid="classchannel_1a51d94f54c197af517c9e2c589a84b58d" prot="private" virt="non-virtual"><scope>channel</scope><name>reader</name></member>
      <member refid="classchannel_1a275ac66b9b775a7423f4fb090ea01e86" prot="private" virt="non-virtual"><scope>channel</scope><name>reader_list</name></member>
      <member refid="classchannel_1a76f514a6490fa439fa4688e6a555d83c" prot="public" virt="non-virtual"><scope>channel</scope><name>reference</name></member>
      <member refid="classchannel_1ad74597ca991006c04ffb977ce16da8de" prot="public" virt="non-virtual"><scope>channel</scope><name>value_type</name></member>
      <member refid="classchannel_1a0c4217bf051739ef25742e3ebcf01546" prot="public" virt="non-virtual"><scope>channel</scope><name>write</name></member>
      <member refid="classchannel_1a639dfb7f219f194b943a8276f704c39a" prot="private" virt="non-virtual"><scope>channel</scope><name>writer</name></member>
      <member refid="classchannel_1a027bdf92ab9603838832eb2372d93c91" prot="private" virt="non-virtual"><scope>channel</scope><name>writer</name></member>
      <member refid="classchannel_1a3b851f25b9d47791a3c03d718ad0d499" prot="private" virt="non-virtual"><scope>channel</scope><name>writer_list</name></member>
      <member refid="classchannel_1a3d930bce6d71bf3200f17152eddcbac0" prot="public" virt="non-virtual"><scope>channel</scope><name>~channel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
