<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classcoro_1_1frame__t_1_1promise__type" kind="class" language="C++" prot="public" final="yes">
    <compoundname>coro::frame_t::promise_type</compoundname>
    <basecompoundref refid="classcoro_1_1promise__na" prot="public" virt="non-virtual">coro::promise_na</basecompoundref>
    <includes refid="return_8h" local="no">return.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcoro_1_1frame__t_1_1promise__type_1a63d10c951414b16b7ff45a574e3094a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void coro::frame_t::promise_type::unhandled_exception</definition>
        <argsstring>() noexcept(false)</argsstring>
        <name>unhandled_exception</name>
        <briefdescription>
<para>The <computeroutput><ref refid="classcoro_1_1frame__t" kindref="compound">frame_t</ref></computeroutput> will do nothing for exception handling. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/return.h" line="131" column="1" bodyfile="interface/coroutine/return.h" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classcoro_1_1frame__t_1_1promise__type_1a9644f5c45cb2843a4458eaf25a0ebe74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void coro::frame_t::promise_type::return_void</definition>
        <argsstring>() noexcept</argsstring>
        <name>return_void</name>
        <briefdescription>
<para>this is a <computeroutput>void</computeroutput> return for the coroutines </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/return.h" line="137" column="1" bodyfile="interface/coroutine/return.h" bodystart="137" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classcoro_1_1frame__t_1_1promise__type_1a22b9498b1294c08cd04a0e90db979c85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcoro_1_1frame__t" kindref="compound">frame_t</ref></type>
        <definition>frame_t coro::frame_t::promise_type::get_return_object</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_return_object</name>
        <briefdescription>
<para>Acquire <computeroutput>coroutine_handle&lt;void&gt;</computeroutput> from current promise and return it. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classcoro_1_1frame__t" kindref="compound">frame_t</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/return.h" line="143" column="1" bodyfile="interface/coroutine/return.h" bodystart="143" bodyend="148"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Acquire <computeroutput>coroutine_handle&lt;void&gt;</computeroutput> from current object and expose it through <computeroutput>get_return_object</computeroutput> </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="305">
        <label>coro::frame_t::promise_type</label>
        <link refid="classcoro_1_1frame__t_1_1promise__type"/>
        <childnode refid="306" relation="public-inheritance">
        </childnode>
      </node>
      <node id="306">
        <label>coro::promise_na</label>
        <link refid="classcoro_1_1promise__na"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="307">
        <label>coro::frame_t::promise_type</label>
        <link refid="classcoro_1_1frame__t_1_1promise__type"/>
        <childnode refid="308" relation="public-inheritance">
        </childnode>
      </node>
      <node id="308">
        <label>coro::promise_na</label>
        <link refid="classcoro_1_1promise__na"/>
      </node>
    </collaborationgraph>
    <location file="interface/coroutine/return.h" line="126" column="1" bodyfile="interface/coroutine/return.h" bodystart="126" bodyend="149"/>
    <listofallmembers>
      <member refid="classcoro_1_1promise__na_1af07e52a11070442615475901fbbb21e2" prot="public" virt="non-virtual"><scope>coro::frame_t::promise_type</scope><name>final_suspend</name></member>
      <member refid="classcoro_1_1frame__t_1_1promise__type_1a22b9498b1294c08cd04a0e90db979c85" prot="public" virt="non-virtual"><scope>coro::frame_t::promise_type</scope><name>get_return_object</name></member>
      <member refid="classcoro_1_1promise__na_1a8ef0f7bd7b8b834de1eb85dcb723e674" prot="public" virt="non-virtual"><scope>coro::frame_t::promise_type</scope><name>initial_suspend</name></member>
      <member refid="classcoro_1_1frame__t_1_1promise__type_1a9644f5c45cb2843a4458eaf25a0ebe74" prot="public" virt="non-virtual"><scope>coro::frame_t::promise_type</scope><name>return_void</name></member>
      <member refid="classcoro_1_1frame__t_1_1promise__type_1a63d10c951414b16b7ff45a574e3094a9" prot="public" virt="non-virtual"><scope>coro::frame_t::promise_type</scope><name>unhandled_exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
