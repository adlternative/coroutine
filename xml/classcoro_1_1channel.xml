<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classcoro_1_1channel" kind="class" language="C++" prot="public">
    <compoundname>coro::channel</compoundname>
    <basecompoundref refid="classcoro_1_1internal_1_1list" prot="private" virt="non-virtual">coro::internal::list&lt; channel_reader&lt; T, M &gt; &gt;</basecompoundref>
    <basecompoundref refid="classcoro_1_1internal_1_1list" prot="private" virt="non-virtual">coro::internal::list&lt; channel_writer&lt; T, M &gt; &gt;</basecompoundref>
    <includes refid="channel_8hpp" local="no">channel.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>M</declname>
        <defname>M</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classcoro_1_1channel_1a9ec75050c355ffb2b024714a7ab431a4" prot="public" static="no">
        <type>T</type>
        <definition>using coro::channel&lt; T, M &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="364" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcoro_1_1channel_1aa39036482a7cbe5948361f05cb90f08e" prot="public" static="no">
        <type><ref refid="classcoro_1_1channel_1a9ec75050c355ffb2b024714a7ab431a4" kindref="member">value_type</ref> *</type>
        <definition>using coro::channel&lt; T, M &gt;::pointer =  value_type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="365" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcoro_1_1channel_1a237892aa34ea2f74b81f2357a35a9d39" prot="public" static="no">
        <type><ref refid="classcoro_1_1channel_1a9ec75050c355ffb2b024714a7ab431a4" kindref="member">value_type</ref> &amp;</type>
        <definition>using coro::channel&lt; T, M &gt;::reference =  value_type&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="366" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcoro_1_1channel_1a4c5a25ab02b09adfca500dad9847e614" prot="public" static="no">
        <type>M</type>
        <definition>using coro::channel&lt; T, M &gt;::mutex_type =  M</definition>
        <argsstring></argsstring>
        <name>mutex_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="367" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classcoro_1_1channel_1a1c2cf057eb04bb92865c72ea622d95c8" prot="private" static="no">
        <type><ref refid="classcoro_1_1channel__reader" kindref="compound">channel_reader</ref>&lt; <ref refid="classcoro_1_1channel_1a9ec75050c355ffb2b024714a7ab431a4" kindref="member">value_type</ref>, <ref refid="classcoro_1_1channel_1a4c5a25ab02b09adfca500dad9847e614" kindref="member">mutex_type</ref> &gt;</type>
        <definition>using coro::channel&lt; T, M &gt;::reader =  channel_reader&lt;value_type, mutex_type&gt;</definition>
        <argsstring></argsstring>
        <name>reader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="370" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcoro_1_1channel_1aed049c9040cfa7902a7fb9de70108c95" prot="private" static="no">
        <type><ref refid="classcoro_1_1internal_1_1list" kindref="compound">internal::list</ref>&lt; <ref refid="classcoro_1_1channel__reader" kindref="compound">reader</ref> &gt;</type>
        <definition>using coro::channel&lt; T, M &gt;::reader_list =  internal::list&lt;reader&gt;</definition>
        <argsstring></argsstring>
        <name>reader_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="371" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcoro_1_1channel_1a562db6acaf720f829ca5d9c2ab07eed5" prot="private" static="no">
        <type><ref refid="classcoro_1_1channel__writer" kindref="compound">channel_writer</ref>&lt; <ref refid="classcoro_1_1channel_1a9ec75050c355ffb2b024714a7ab431a4" kindref="member">value_type</ref>, <ref refid="classcoro_1_1channel_1a4c5a25ab02b09adfca500dad9847e614" kindref="member">mutex_type</ref> &gt;</type>
        <definition>using coro::channel&lt; T, M &gt;::writer =  channel_writer&lt;value_type, mutex_type&gt;</definition>
        <argsstring></argsstring>
        <name>writer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="372" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcoro_1_1channel_1ad3a8386d74fd125feb5b415fb63d3cbe" prot="private" static="no">
        <type><ref refid="classcoro_1_1internal_1_1list" kindref="compound">internal::list</ref>&lt; <ref refid="classcoro_1_1channel__writer" kindref="compound">writer</ref> &gt;</type>
        <definition>using coro::channel&lt; T, M &gt;::writer_list =  internal::list&lt;writer&gt;</definition>
        <argsstring></argsstring>
        <name>writer_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="373" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcoro_1_1channel_1ad2fee5f994fb76e10b9041f5f9f2cb4c" prot="private" static="no">
        <type><ref refid="classcoro_1_1channel__peeker" kindref="compound">channel_peeker</ref>&lt; <ref refid="classcoro_1_1channel_1a9ec75050c355ffb2b024714a7ab431a4" kindref="member">value_type</ref>, <ref refid="classcoro_1_1channel_1a4c5a25ab02b09adfca500dad9847e614" kindref="member">mutex_type</ref> &gt;</type>
        <definition>using coro::channel&lt; T, M &gt;::peeker =  channel_peeker&lt;value_type, mutex_type&gt;</definition>
        <argsstring></argsstring>
        <name>peeker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="374" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="374" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcoro_1_1channel_1ab7a630a2afa7580a6dd2231930dd7f3c" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend coro::channel&lt; T, M &gt;::reader</definition>
        <argsstring></argsstring>
        <name>reader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="376" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcoro_1_1channel_1a041271ea7d37ead351ca38af51d56794" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend coro::channel&lt; T, M &gt;::writer</definition>
        <argsstring></argsstring>
        <name>writer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="377" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcoro_1_1channel_1abb4d8d26d937b9baf21a1a06fe9e0c97" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend coro::channel&lt; T, M &gt;::peeker</definition>
        <argsstring></argsstring>
        <name>peeker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="378" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcoro_1_1channel_1a6deb1d8b1bee0f3bae168e50e58d323b" prot="private" static="no" mutable="no">
        <type><ref refid="classcoro_1_1channel_1a4c5a25ab02b09adfca500dad9847e614" kindref="member">mutex_type</ref></type>
        <definition>mutex_type coro::channel&lt; T, M &gt;::mtx</definition>
        <argsstring></argsstring>
        <name>mtx</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="381" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="381" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classcoro_1_1channel_1a4cf1a95a2cebe1212be7f4c340aeabc0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>coro::channel&lt; T, M &gt;::channel</definition>
        <argsstring>(const channel &amp;) noexcept(false)=delete</argsstring>
        <name>channel</name>
        <param>
          <type>const <ref refid="classcoro_1_1channel" kindref="compound">channel</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcoro_1_1channel_1ae74b89cd4fdfb128412fb0fe9b6eabcb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>coro::channel&lt; T, M &gt;::channel</definition>
        <argsstring>(channel &amp;&amp;) noexcept(false)=delete</argsstring>
        <name>channel</name>
        <param>
          <type><ref refid="classcoro_1_1channel" kindref="compound">channel</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="385" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcoro_1_1channel_1a2d58af94b4f7002acce60ebd79f5db3c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcoro_1_1channel" kindref="compound">channel</ref> &amp;</type>
        <definition>channel&amp; coro::channel&lt; T, M &gt;::operator=</definition>
        <argsstring>(const channel &amp;) noexcept(false)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classcoro_1_1channel" kindref="compound">channel</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="386" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcoro_1_1channel_1afa31c58572b4af15fab3618cdff5b556" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcoro_1_1channel" kindref="compound">channel</ref> &amp;</type>
        <definition>channel&amp; coro::channel&lt; T, M &gt;::operator=</definition>
        <argsstring>(channel &amp;&amp;) noexcept(false)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classcoro_1_1channel" kindref="compound">channel</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="387" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcoro_1_1channel_1a74304f24df84623d98ff6733a2ba2281" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>coro::channel&lt; T, M &gt;::channel</definition>
        <argsstring>() noexcept(false)</argsstring>
        <name>channel</name>
        <briefdescription>
<para>initialized 2 linked list and given mutex </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="393" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="393" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classcoro_1_1channel_1adb12b67c3ed3050bf108583e495d240e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>coro::channel&lt; T, M &gt;::~channel</definition>
        <argsstring>() noexcept(false)</argsstring>
        <name>~channel</name>
        <briefdescription>
<para>Resume all attached coroutine read/write operations. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Channel can&apos;t provide exception guarantee since the destruction contains coroutines&apos; resume</para></simplesect>
If the channel is raced hardly, some coroutines can be enqueued into list just after this destructor unlocks mutex.</para><para>Unfortunately, this can&apos;t be detected at once since we have 2 list (readers/writers) in the channel.</para><para>Current implementation allows checking repeatedly to reduce the probability of such interleaving. <bold>Modify the repeat count in the code</bold> if the situation occurs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="411" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="411" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="classcoro_1_1channel_1a1cbff064b82e41767691003a7c1a64d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) coro::channel&lt; T, M &gt;::write</definition>
        <argsstring>(reference ref) noexcept(false)</argsstring>
        <name>write</name>
        <param>
          <type><ref refid="classcoro_1_1channel_1a237892aa34ea2f74b81f2357a35a9d39" kindref="member">reference</ref></type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>construct a new writer which references this channel </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>T&amp;</computeroutput> which holds a value to be <computeroutput>move</computeroutput>d to reader. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classcoro_1_1channel__writer" kindref="compound">channel_writer</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="443" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="443" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classcoro_1_1channel_1a899183f59f63289060c79d4c6f57cd52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) coro::channel&lt; T, M &gt;::read</definition>
        <argsstring>() noexcept(false)</argsstring>
        <name>read</name>
        <briefdescription>
<para>construct a new reader which references this channel </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classcoro_1_1channel__reader" kindref="compound">channel_reader</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/coroutine/channel.hpp" line="451" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="451" bodyend="453"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>C++ Coroutines based channel. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>It works as synchronizer of <computeroutput><ref refid="classcoro_1_1channel__writer" kindref="compound">channel_writer</ref></computeroutput>/<computeroutput><ref refid="classcoro_1_1channel__reader" kindref="compound">channel_reader</ref></computeroutput>. The parameter mutex must meet the requirement of the synchronization.</para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>M</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the mutex(lockable) for its member </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="172">
        <label>coro::channel&lt; T, M &gt;</label>
        <link refid="classcoro_1_1channel"/>
        <childnode refid="173" relation="private-inheritance">
        </childnode>
        <childnode refid="174" relation="private-inheritance">
        </childnode>
      </node>
      <node id="174">
        <label>coro::internal::list&lt; channel_writer&lt; T, M &gt; &gt;</label>
        <link refid="classcoro_1_1internal_1_1list"/>
      </node>
      <node id="173">
        <label>coro::internal::list&lt; channel_reader&lt; T, M &gt; &gt;</label>
        <link refid="classcoro_1_1internal_1_1list"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="175">
        <label>coro::channel&lt; T, M &gt;</label>
        <link refid="classcoro_1_1channel"/>
        <childnode refid="176" relation="private-inheritance">
        </childnode>
        <childnode refid="177" relation="private-inheritance">
        </childnode>
      </node>
      <node id="177">
        <label>coro::internal::list&lt; channel_writer&lt; T, M &gt; &gt;</label>
        <link refid="classcoro_1_1internal_1_1list"/>
      </node>
      <node id="176">
        <label>coro::internal::list&lt; channel_reader&lt; T, M &gt; &gt;</label>
        <link refid="classcoro_1_1internal_1_1list"/>
      </node>
    </collaborationgraph>
    <location file="interface/coroutine/channel.hpp" line="118" column="1" bodyfile="interface/coroutine/channel.hpp" bodystart="118" bodyend="-1"/>
    <listofallmembers>
      <member refid="classcoro_1_1channel_1a4cf1a95a2cebe1212be7f4c340aeabc0" prot="private" virt="non-virtual"><scope>coro::channel</scope><name>channel</name></member>
      <member refid="classcoro_1_1channel_1ae74b89cd4fdfb128412fb0fe9b6eabcb" prot="private" virt="non-virtual"><scope>coro::channel</scope><name>channel</name></member>
      <member refid="classcoro_1_1channel_1a74304f24df84623d98ff6733a2ba2281" prot="public" virt="non-virtual"><scope>coro::channel</scope><name>channel</name></member>
      <member refid="classcoro_1_1internal_1_1list_1a04a7df7b349952b290c8a1bc393c278e" prot="private" virt="non-virtual" ambiguityscope="list&lt; channel_reader&lt; T, M &gt; &gt;::"><scope>coro::channel</scope><name>is_empty</name></member>
      <member refid="classcoro_1_1internal_1_1list_1a04a7df7b349952b290c8a1bc393c278e" prot="private" virt="non-virtual" ambiguityscope="list&lt; channel_writer&lt; T, M &gt; &gt;::"><scope>coro::channel</scope><name>is_empty</name></member>
      <member refid="classcoro_1_1channel_1a6deb1d8b1bee0f3bae168e50e58d323b" prot="private" virt="non-virtual"><scope>coro::channel</scope><name>mtx</name></member>
      <member refid="classcoro_1_1channel_1a4c5a25ab02b09adfca500dad9847e614" prot="public" virt="non-virtual"><scope>coro::channel</scope><name>mutex_type</name></member>
      <member refid="classcoro_1_1channel_1a2d58af94b4f7002acce60ebd79f5db3c" prot="private" virt="non-virtual"><scope>coro::channel</scope><name>operator=</name></member>
      <member refid="classcoro_1_1channel_1afa31c58572b4af15fab3618cdff5b556" prot="private" virt="non-virtual"><scope>coro::channel</scope><name>operator=</name></member>
      <member refid="classcoro_1_1channel_1ad2fee5f994fb76e10b9041f5f9f2cb4c" prot="private" virt="non-virtual"><scope>coro::channel</scope><name>peeker</name></member>
      <member refid="classcoro_1_1channel_1abb4d8d26d937b9baf21a1a06fe9e0c97" prot="private" virt="non-virtual"><scope>coro::channel</scope><name>peeker</name></member>
      <member refid="classcoro_1_1channel_1aa39036482a7cbe5948361f05cb90f08e" prot="public" virt="non-virtual"><scope>coro::channel</scope><name>pointer</name></member>
      <member refid="classcoro_1_1internal_1_1list_1a0a84874a8a54b2e1c7145f7332983dc8" prot="private" virt="non-virtual" ambiguityscope="list&lt; channel_reader&lt; T, M &gt; &gt;::"><scope>coro::channel</scope><name>pop</name></member>
      <member refid="classcoro_1_1internal_1_1list_1a0a84874a8a54b2e1c7145f7332983dc8" prot="private" virt="non-virtual" ambiguityscope="list&lt; channel_writer&lt; T, M &gt; &gt;::"><scope>coro::channel</scope><name>pop</name></member>
      <member refid="classcoro_1_1internal_1_1list_1ace49b504493b9dbf41ae5616e6c43d53" prot="private" virt="non-virtual" ambiguityscope="list&lt; channel_reader&lt; T, M &gt; &gt;::"><scope>coro::channel</scope><name>push</name></member>
      <member refid="classcoro_1_1internal_1_1list_1ace49b504493b9dbf41ae5616e6c43d53" prot="private" virt="non-virtual" ambiguityscope="list&lt; channel_writer&lt; T, M &gt; &gt;::"><scope>coro::channel</scope><name>push</name></member>
      <member refid="classcoro_1_1channel_1a899183f59f63289060c79d4c6f57cd52" prot="public" virt="non-virtual"><scope>coro::channel</scope><name>read</name></member>
      <member refid="classcoro_1_1channel_1a1c2cf057eb04bb92865c72ea622d95c8" prot="private" virt="non-virtual"><scope>coro::channel</scope><name>reader</name></member>
      <member refid="classcoro_1_1channel_1ab7a630a2afa7580a6dd2231930dd7f3c" prot="private" virt="non-virtual"><scope>coro::channel</scope><name>reader</name></member>
      <member refid="classcoro_1_1channel_1aed049c9040cfa7902a7fb9de70108c95" prot="private" virt="non-virtual"><scope>coro::channel</scope><name>reader_list</name></member>
      <member refid="classcoro_1_1channel_1a237892aa34ea2f74b81f2357a35a9d39" prot="public" virt="non-virtual"><scope>coro::channel</scope><name>reference</name></member>
      <member refid="classcoro_1_1channel_1a9ec75050c355ffb2b024714a7ab431a4" prot="public" virt="non-virtual"><scope>coro::channel</scope><name>value_type</name></member>
      <member refid="classcoro_1_1channel_1a1cbff064b82e41767691003a7c1a64d1" prot="public" virt="non-virtual"><scope>coro::channel</scope><name>write</name></member>
      <member refid="classcoro_1_1channel_1a562db6acaf720f829ca5d9c2ab07eed5" prot="private" virt="non-virtual"><scope>coro::channel</scope><name>writer</name></member>
      <member refid="classcoro_1_1channel_1a041271ea7d37ead351ca38af51d56794" prot="private" virt="non-virtual"><scope>coro::channel</scope><name>writer</name></member>
      <member refid="classcoro_1_1channel_1ad3a8386d74fd125feb5b415fb63d3cbe" prot="private" virt="non-virtual"><scope>coro::channel</scope><name>writer_list</name></member>
      <member refid="classcoro_1_1channel_1adb12b67c3ed3050bf108583e495d240e" prot="public" virt="non-virtual"><scope>coro::channel</scope><name>~channel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
